/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trantorinc.synergy.skill.core.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Skill service. Represents a row in the &quot;SKILL_Skill&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.trantorinc.synergy.skill.core.model.impl.SkillModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.trantorinc.synergy.skill.core.model.impl.SkillImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Skill
 * @generated
 */
@ProviderType
public interface SkillModel extends BaseModel<Skill> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a skill model instance should use the {@link Skill} interface instead.
	 */

	/**
	 * Returns the primary key of this skill.
	 *
	 * @return the primary key of this skill
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this skill.
	 *
	 * @param primaryKey the primary key of this skill
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the skill ID of this skill.
	 *
	 * @return the skill ID of this skill
	 */
	public long getSkillId();

	/**
	 * Sets the skill ID of this skill.
	 *
	 * @param skillId the skill ID of this skill
	 */
	public void setSkillId(long skillId);

	/**
	 * Returns the ecode of this skill.
	 *
	 * @return the ecode of this skill
	 */
	@AutoEscape
	public String getEcode();

	/**
	 * Sets the ecode of this skill.
	 *
	 * @param ecode the ecode of this skill
	 */
	public void setEcode(String ecode);

	/**
	 * Returns the project of this skill.
	 *
	 * @return the project of this skill
	 */
	@AutoEscape
	public String getProject();

	/**
	 * Sets the project of this skill.
	 *
	 * @param project the project of this skill
	 */
	public void setProject(String project);

	/**
	 * Returns the core skill of this skill.
	 *
	 * @return the core skill of this skill
	 */
	@AutoEscape
	public String getCoreSkill();

	/**
	 * Sets the core skill of this skill.
	 *
	 * @param coreSkill the core skill of this skill
	 */
	public void setCoreSkill(String coreSkill);

	/**
	 * Returns the sub skill of this skill.
	 *
	 * @return the sub skill of this skill
	 */
	@AutoEscape
	public String getSubSkill();

	/**
	 * Sets the sub skill of this skill.
	 *
	 * @param subSkill the sub skill of this skill
	 */
	public void setSubSkill(String subSkill);

	/**
	 * Returns the tool of this skill.
	 *
	 * @return the tool of this skill
	 */
	@AutoEscape
	public String getTool();

	/**
	 * Sets the tool of this skill.
	 *
	 * @param tool the tool of this skill
	 */
	public void setTool(String tool);

	/**
	 * Returns the validity of this skill.
	 *
	 * @return the validity of this skill
	 */
	@AutoEscape
	public String getValidity();

	/**
	 * Sets the validity of this skill.
	 *
	 * @param validity the validity of this skill
	 */
	public void setValidity(String validity);

	/**
	 * Returns the version of this skill.
	 *
	 * @return the version of this skill
	 */
	@AutoEscape
	public String getVersion();

	/**
	 * Sets the version of this skill.
	 *
	 * @param version the version of this skill
	 */
	public void setVersion(String version);

	/**
	 * Returns the status of this skill.
	 *
	 * @return the status of this skill
	 */
	public int getStatus();

	/**
	 * Sets the status of this skill.
	 *
	 * @param status the status of this skill
	 */
	public void setStatus(int status);

	/**
	 * Returns the reviewer of this skill.
	 *
	 * @return the reviewer of this skill
	 */
	@AutoEscape
	public String getReviewer();

	/**
	 * Sets the reviewer of this skill.
	 *
	 * @param reviewer the reviewer of this skill
	 */
	public void setReviewer(String reviewer);

	/**
	 * Returns the manager of this skill.
	 *
	 * @return the manager of this skill
	 */
	@AutoEscape
	public String getManager();

	/**
	 * Sets the manager of this skill.
	 *
	 * @param manager the manager of this skill
	 */
	public void setManager(String manager);

	/**
	 * Returns the primary skill of this skill.
	 *
	 * @return the primary skill of this skill
	 */
	public boolean getPrimarySkill();

	/**
	 * Returns <code>true</code> if this skill is primary skill.
	 *
	 * @return <code>true</code> if this skill is primary skill; <code>false</code> otherwise
	 */
	public boolean isPrimarySkill();

	/**
	 * Sets whether this skill is primary skill.
	 *
	 * @param primarySkill the primary skill of this skill
	 */
	public void setPrimarySkill(boolean primarySkill);

	/**
	 * Returns the proficiency level of this skill.
	 *
	 * @return the proficiency level of this skill
	 */
	public int getProficiencyLevel();

	/**
	 * Sets the proficiency level of this skill.
	 *
	 * @param proficiencyLevel the proficiency level of this skill
	 */
	public void setProficiencyLevel(int proficiencyLevel);

	/**
	 * Returns the required level of this skill.
	 *
	 * @return the required level of this skill
	 */
	public int getRequiredLevel();

	/**
	 * Sets the required level of this skill.
	 *
	 * @param requiredLevel the required level of this skill
	 */
	public void setRequiredLevel(int requiredLevel);

	@Override
	public Skill cloneWithOriginalValues();

}