/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trantorinc.synergy.lms.core.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Employee service. Represents a row in the &quot;LMS_Employee&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.trantorinc.synergy.lms.core.model.impl.EmployeeModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.trantorinc.synergy.lms.core.model.impl.EmployeeImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Employee
 * @generated
 */
@ProviderType
public interface EmployeeModel extends BaseModel<Employee> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a employee model instance should use the {@link Employee} interface instead.
	 */

	/**
	 * Returns the primary key of this employee.
	 *
	 * @return the primary key of this employee
	 */
	public String getPrimaryKey();

	/**
	 * Sets the primary key of this employee.
	 *
	 * @param primaryKey the primary key of this employee
	 */
	public void setPrimaryKey(String primaryKey);

	/**
	 * Returns the ecode of this employee.
	 *
	 * @return the ecode of this employee
	 */
	@AutoEscape
	public String getEcode();

	/**
	 * Sets the ecode of this employee.
	 *
	 * @param ecode the ecode of this employee
	 */
	public void setEcode(String ecode);

	/**
	 * Returns the status of this employee.
	 *
	 * @return the status of this employee
	 */
	public boolean getStatus();

	/**
	 * Returns <code>true</code> if this employee is status.
	 *
	 * @return <code>true</code> if this employee is status; <code>false</code> otherwise
	 */
	public boolean isStatus();

	/**
	 * Sets whether this employee is status.
	 *
	 * @param status the status of this employee
	 */
	public void setStatus(boolean status);

	/**
	 * Returns the employee type of this employee.
	 *
	 * @return the employee type of this employee
	 */
	@AutoEscape
	public String getEmployeeType();

	/**
	 * Sets the employee type of this employee.
	 *
	 * @param employeeType the employee type of this employee
	 */
	public void setEmployeeType(String employeeType);

	/**
	 * Returns the name of this employee.
	 *
	 * @return the name of this employee
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this employee.
	 *
	 * @param name the name of this employee
	 */
	public void setName(String name);

	/**
	 * Returns the doj of this employee.
	 *
	 * @return the doj of this employee
	 */
	public Date getDoj();

	/**
	 * Sets the doj of this employee.
	 *
	 * @param doj the doj of this employee
	 */
	public void setDoj(Date doj);

	/**
	 * Returns the dob of this employee.
	 *
	 * @return the dob of this employee
	 */
	public Date getDob();

	/**
	 * Sets the dob of this employee.
	 *
	 * @param dob the dob of this employee
	 */
	public void setDob(Date dob);

	/**
	 * Returns the email of this employee.
	 *
	 * @return the email of this employee
	 */
	@AutoEscape
	public String getEmail();

	/**
	 * Sets the email of this employee.
	 *
	 * @param email the email of this employee
	 */
	public void setEmail(String email);

	/**
	 * Returns the band of this employee.
	 *
	 * @return the band of this employee
	 */
	@AutoEscape
	public String getBand();

	/**
	 * Sets the band of this employee.
	 *
	 * @param band the band of this employee
	 */
	public void setBand(String band);

	/**
	 * Returns the designation of this employee.
	 *
	 * @return the designation of this employee
	 */
	@AutoEscape
	public String getDesignation();

	/**
	 * Sets the designation of this employee.
	 *
	 * @param designation the designation of this employee
	 */
	public void setDesignation(String designation);

	/**
	 * Returns the manager of this employee.
	 *
	 * @return the manager of this employee
	 */
	@AutoEscape
	public String getManager();

	/**
	 * Sets the manager of this employee.
	 *
	 * @param manager the manager of this employee
	 */
	public void setManager(String manager);

	/**
	 * Returns the reviewer of this employee.
	 *
	 * @return the reviewer of this employee
	 */
	@AutoEscape
	public String getReviewer();

	/**
	 * Sets the reviewer of this employee.
	 *
	 * @param reviewer the reviewer of this employee
	 */
	public void setReviewer(String reviewer);

	/**
	 * Returns the coordinator of this employee.
	 *
	 * @return the coordinator of this employee
	 */
	@AutoEscape
	public String getCoordinator();

	/**
	 * Sets the coordinator of this employee.
	 *
	 * @param coordinator the coordinator of this employee
	 */
	public void setCoordinator(String coordinator);

	/**
	 * Returns the account of this employee.
	 *
	 * @return the account of this employee
	 */
	@AutoEscape
	public String getAccount();

	/**
	 * Sets the account of this employee.
	 *
	 * @param account the account of this employee
	 */
	public void setAccount(String account);

	/**
	 * Returns the project of this employee.
	 *
	 * @return the project of this employee
	 */
	@AutoEscape
	public String getProject();

	/**
	 * Sets the project of this employee.
	 *
	 * @param project the project of this employee
	 */
	public void setProject(String project);

	/**
	 * Returns the experience of this employee.
	 *
	 * @return the experience of this employee
	 */
	@AutoEscape
	public String getExperience();

	/**
	 * Sets the experience of this employee.
	 *
	 * @param experience the experience of this employee
	 */
	public void setExperience(String experience);

	/**
	 * Returns the skill of this employee.
	 *
	 * @return the skill of this employee
	 */
	@AutoEscape
	public String getSkill();

	/**
	 * Sets the skill of this employee.
	 *
	 * @param skill the skill of this employee
	 */
	public void setSkill(String skill);

	/**
	 * Returns the location of this employee.
	 *
	 * @return the location of this employee
	 */
	@AutoEscape
	public String getLocation();

	/**
	 * Sets the location of this employee.
	 *
	 * @param location the location of this employee
	 */
	public void setLocation(String location);

	/**
	 * Returns the confirmed of this employee.
	 *
	 * @return the confirmed of this employee
	 */
	public boolean getConfirmed();

	/**
	 * Returns <code>true</code> if this employee is confirmed.
	 *
	 * @return <code>true</code> if this employee is confirmed; <code>false</code> otherwise
	 */
	public boolean isConfirmed();

	/**
	 * Sets whether this employee is confirmed.
	 *
	 * @param confirmed the confirmed of this employee
	 */
	public void setConfirmed(boolean confirmed);

	/**
	 * Returns the mobile of this employee.
	 *
	 * @return the mobile of this employee
	 */
	@AutoEscape
	public String getMobile();

	/**
	 * Sets the mobile of this employee.
	 *
	 * @param mobile the mobile of this employee
	 */
	public void setMobile(String mobile);

	/**
	 * Returns the file ID of this employee.
	 *
	 * @return the file ID of this employee
	 */
	@AutoEscape
	public String getFileId();

	/**
	 * Sets the file ID of this employee.
	 *
	 * @param fileId the file ID of this employee
	 */
	public void setFileId(String fileId);

	/**
	 * Returns the skype of this employee.
	 *
	 * @return the skype of this employee
	 */
	@AutoEscape
	public String getSkype();

	/**
	 * Sets the skype of this employee.
	 *
	 * @param skype the skype of this employee
	 */
	public void setSkype(String skype);

	/**
	 * Returns the lms user of this employee.
	 *
	 * @return the lms user of this employee
	 */
	public boolean getLmsUser();

	/**
	 * Returns <code>true</code> if this employee is lms user.
	 *
	 * @return <code>true</code> if this employee is lms user; <code>false</code> otherwise
	 */
	public boolean isLmsUser();

	/**
	 * Sets whether this employee is lms user.
	 *
	 * @param lmsUser the lms user of this employee
	 */
	public void setLmsUser(boolean lmsUser);

	@Override
	public Employee cloneWithOriginalValues();

}