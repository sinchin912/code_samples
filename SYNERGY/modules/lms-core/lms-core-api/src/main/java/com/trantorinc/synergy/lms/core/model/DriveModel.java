/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trantorinc.synergy.lms.core.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Drive service. Represents a row in the &quot;LMS_Drive&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.trantorinc.synergy.lms.core.model.impl.DriveModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.trantorinc.synergy.lms.core.model.impl.DriveImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Drive
 * @generated
 */
@ProviderType
public interface DriveModel extends BaseModel<Drive> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a drive model instance should use the {@link Drive} interface instead.
	 */

	/**
	 * Returns the primary key of this drive.
	 *
	 * @return the primary key of this drive
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this drive.
	 *
	 * @param primaryKey the primary key of this drive
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the drive ID of this drive.
	 *
	 * @return the drive ID of this drive
	 */
	public long getDriveId();

	/**
	 * Sets the drive ID of this drive.
	 *
	 * @param driveId the drive ID of this drive
	 */
	public void setDriveId(long driveId);

	/**
	 * Returns the folder name of this drive.
	 *
	 * @return the folder name of this drive
	 */
	@AutoEscape
	public String getFolderName();

	/**
	 * Sets the folder name of this drive.
	 *
	 * @param folderName the folder name of this drive
	 */
	public void setFolderName(String folderName);

	/**
	 * Returns the folder ID of this drive.
	 *
	 * @return the folder ID of this drive
	 */
	@AutoEscape
	public String getFolderId();

	/**
	 * Sets the folder ID of this drive.
	 *
	 * @param folderId the folder ID of this drive
	 */
	public void setFolderId(String folderId);

	/**
	 * Returns the files count of this drive.
	 *
	 * @return the files count of this drive
	 */
	public int getFilesCount();

	/**
	 * Sets the files count of this drive.
	 *
	 * @param filesCount the files count of this drive
	 */
	public void setFilesCount(int filesCount);

	/**
	 * Returns the update date of this drive.
	 *
	 * @return the update date of this drive
	 */
	public Date getUpdateDate();

	/**
	 * Sets the update date of this drive.
	 *
	 * @param updateDate the update date of this drive
	 */
	public void setUpdateDate(Date updateDate);

	@Override
	public Drive cloneWithOriginalValues();

}