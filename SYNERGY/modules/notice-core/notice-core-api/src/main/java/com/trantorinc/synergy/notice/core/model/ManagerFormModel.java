/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trantorinc.synergy.notice.core.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the ManagerForm service. Represents a row in the &quot;NOTICE_ManagerForm&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.trantorinc.synergy.notice.core.model.impl.ManagerFormModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.trantorinc.synergy.notice.core.model.impl.ManagerFormImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ManagerForm
 * @generated
 */
@ProviderType
public interface ManagerFormModel extends BaseModel<ManagerForm> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a manager form model instance should use the {@link ManagerForm} interface instead.
	 */

	/**
	 * Returns the primary key of this manager form.
	 *
	 * @return the primary key of this manager form
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this manager form.
	 *
	 * @param primaryKey the primary key of this manager form
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this manager form.
	 *
	 * @return the ID of this manager form
	 */
	public long getId();

	/**
	 * Sets the ID of this manager form.
	 *
	 * @param id the ID of this manager form
	 */
	public void setId(long id);

	/**
	 * Returns the exit ID of this manager form.
	 *
	 * @return the exit ID of this manager form
	 */
	public long getExitId();

	/**
	 * Sets the exit ID of this manager form.
	 *
	 * @param exitId the exit ID of this manager form
	 */
	public void setExitId(long exitId);

	/**
	 * Returns the ticket no of this manager form.
	 *
	 * @return the ticket no of this manager form
	 */
	public int getTicketNo();

	/**
	 * Sets the ticket no of this manager form.
	 *
	 * @param ticketNo the ticket no of this manager form
	 */
	public void setTicketNo(int ticketNo);

	/**
	 * Returns the ticket no remark of this manager form.
	 *
	 * @return the ticket no remark of this manager form
	 */
	@AutoEscape
	public String getTicketNoRemark();

	/**
	 * Sets the ticket no remark of this manager form.
	 *
	 * @param ticketNoRemark the ticket no remark of this manager form
	 */
	public void setTicketNoRemark(String ticketNoRemark);

	/**
	 * Returns the separation document of this manager form.
	 *
	 * @return the separation document of this manager form
	 */
	public int getSeparationDocument();

	/**
	 * Sets the separation document of this manager form.
	 *
	 * @param separationDocument the separation document of this manager form
	 */
	public void setSeparationDocument(int separationDocument);

	/**
	 * Returns the separation document remark of this manager form.
	 *
	 * @return the separation document remark of this manager form
	 */
	@AutoEscape
	public String getSeparationDocumentRemark();

	/**
	 * Sets the separation document remark of this manager form.
	 *
	 * @param separationDocumentRemark the separation document remark of this manager form
	 */
	public void setSeparationDocumentRemark(String separationDocumentRemark);

	/**
	 * Returns the updated date of this manager form.
	 *
	 * @return the updated date of this manager form
	 */
	public Date getUpdatedDate();

	/**
	 * Sets the updated date of this manager form.
	 *
	 * @param updatedDate the updated date of this manager form
	 */
	public void setUpdatedDate(Date updatedDate);

	@Override
	public ManagerForm cloneWithOriginalValues();

}