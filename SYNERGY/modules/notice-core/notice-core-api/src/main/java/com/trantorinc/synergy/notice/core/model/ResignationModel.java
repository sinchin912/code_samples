/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trantorinc.synergy.notice.core.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Resignation service. Represents a row in the &quot;NOTICE_Resignation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.trantorinc.synergy.notice.core.model.impl.ResignationModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.trantorinc.synergy.notice.core.model.impl.ResignationImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Resignation
 * @generated
 */
@ProviderType
public interface ResignationModel extends BaseModel<Resignation> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a resignation model instance should use the {@link Resignation} interface instead.
	 */

	/**
	 * Returns the primary key of this resignation.
	 *
	 * @return the primary key of this resignation
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this resignation.
	 *
	 * @param primaryKey the primary key of this resignation
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this resignation.
	 *
	 * @return the ID of this resignation
	 */
	public long getId();

	/**
	 * Sets the ID of this resignation.
	 *
	 * @param id the ID of this resignation
	 */
	public void setId(long id);

	/**
	 * Returns the ecode of this resignation.
	 *
	 * @return the ecode of this resignation
	 */
	@AutoEscape
	public String getEcode();

	/**
	 * Sets the ecode of this resignation.
	 *
	 * @param ecode the ecode of this resignation
	 */
	public void setEcode(String ecode);

	/**
	 * Returns the account of this resignation.
	 *
	 * @return the account of this resignation
	 */
	@AutoEscape
	public String getAccount();

	/**
	 * Sets the account of this resignation.
	 *
	 * @param account the account of this resignation
	 */
	public void setAccount(String account);

	/**
	 * Returns the manager email of this resignation.
	 *
	 * @return the manager email of this resignation
	 */
	@AutoEscape
	public String getManagerEmail();

	/**
	 * Sets the manager email of this resignation.
	 *
	 * @param managerEmail the manager email of this resignation
	 */
	public void setManagerEmail(String managerEmail);

	/**
	 * Returns the assignee email of this resignation.
	 *
	 * @return the assignee email of this resignation
	 */
	@AutoEscape
	public String getAssigneeEmail();

	/**
	 * Sets the assignee email of this resignation.
	 *
	 * @param assigneeEmail the assignee email of this resignation
	 */
	public void setAssigneeEmail(String assigneeEmail);

	/**
	 * Returns the assignee to of this resignation.
	 *
	 * @return the assignee to of this resignation
	 */
	public boolean getAssigneeTo();

	/**
	 * Returns <code>true</code> if this resignation is assignee to.
	 *
	 * @return <code>true</code> if this resignation is assignee to; <code>false</code> otherwise
	 */
	public boolean isAssigneeTo();

	/**
	 * Sets whether this resignation is assignee to.
	 *
	 * @param assigneeTo the assignee to of this resignation
	 */
	public void setAssigneeTo(boolean assigneeTo);

	/**
	 * Returns the alternate email of this resignation.
	 *
	 * @return the alternate email of this resignation
	 */
	@AutoEscape
	public String getAlternateEmail();

	/**
	 * Sets the alternate email of this resignation.
	 *
	 * @param alternateEmail the alternate email of this resignation
	 */
	public void setAlternateEmail(String alternateEmail);

	/**
	 * Returns the state name of this resignation.
	 *
	 * @return the state name of this resignation
	 */
	@AutoEscape
	public String getStateName();

	/**
	 * Sets the state name of this resignation.
	 *
	 * @param stateName the state name of this resignation
	 */
	public void setStateName(String stateName);

	/**
	 * Returns the city name of this resignation.
	 *
	 * @return the city name of this resignation
	 */
	@AutoEscape
	public String getCityName();

	/**
	 * Sets the city name of this resignation.
	 *
	 * @param cityName the city name of this resignation
	 */
	public void setCityName(String cityName);

	/**
	 * Returns the pincode of this resignation.
	 *
	 * @return the pincode of this resignation
	 */
	@AutoEscape
	public String getPincode();

	/**
	 * Sets the pincode of this resignation.
	 *
	 * @param pincode the pincode of this resignation
	 */
	public void setPincode(String pincode);

	/**
	 * Returns the postal address of this resignation.
	 *
	 * @return the postal address of this resignation
	 */
	@AutoEscape
	public String getPostalAddress();

	/**
	 * Sets the postal address of this resignation.
	 *
	 * @param postalAddress the postal address of this resignation
	 */
	public void setPostalAddress(String postalAddress);

	/**
	 * Returns the reason of this resignation.
	 *
	 * @return the reason of this resignation
	 */
	@AutoEscape
	public String getReason();

	/**
	 * Sets the reason of this resignation.
	 *
	 * @param reason the reason of this resignation
	 */
	public void setReason(String reason);

	/**
	 * Returns the last working date of this resignation.
	 *
	 * @return the last working date of this resignation
	 */
	public Date getLastWorkingDate();

	/**
	 * Sets the last working date of this resignation.
	 *
	 * @param lastWorkingDate the last working date of this resignation
	 */
	public void setLastWorkingDate(Date lastWorkingDate);

	/**
	 * Returns the manager submission date of this resignation.
	 *
	 * @return the manager submission date of this resignation
	 */
	public Date getManagerSubmissionDate();

	/**
	 * Sets the manager submission date of this resignation.
	 *
	 * @param managerSubmissionDate the manager submission date of this resignation
	 */
	public void setManagerSubmissionDate(Date managerSubmissionDate);

	/**
	 * Returns the hr submission date of this resignation.
	 *
	 * @return the hr submission date of this resignation
	 */
	public Date getHrSubmissionDate();

	/**
	 * Sets the hr submission date of this resignation.
	 *
	 * @param hrSubmissionDate the hr submission date of this resignation
	 */
	public void setHrSubmissionDate(Date hrSubmissionDate);

	/**
	 * Returns the withdraw initiated date of this resignation.
	 *
	 * @return the withdraw initiated date of this resignation
	 */
	public Date getWithdrawInitiatedDate();

	/**
	 * Sets the withdraw initiated date of this resignation.
	 *
	 * @param withdrawInitiatedDate the withdraw initiated date of this resignation
	 */
	public void setWithdrawInitiatedDate(Date withdrawInitiatedDate);

	/**
	 * Returns the abscond terminate date of this resignation.
	 *
	 * @return the abscond terminate date of this resignation
	 */
	public Date getAbscondTerminateDate();

	/**
	 * Sets the abscond terminate date of this resignation.
	 *
	 * @param abscondTerminateDate the abscond terminate date of this resignation
	 */
	public void setAbscondTerminateDate(Date abscondTerminateDate);

	/**
	 * Returns the separation type of this resignation.
	 *
	 * @return the separation type of this resignation
	 */
	@AutoEscape
	public String getSeparationType();

	/**
	 * Sets the separation type of this resignation.
	 *
	 * @param separationType the separation type of this resignation
	 */
	public void setSeparationType(String separationType);

	/**
	 * Returns the key to company of this resignation.
	 *
	 * @return the key to company of this resignation
	 */
	@AutoEscape
	public String getKeyToCompany();

	/**
	 * Sets the key to company of this resignation.
	 *
	 * @param keyToCompany the key to company of this resignation
	 */
	public void setKeyToCompany(String keyToCompany);

	/**
	 * Returns the key to project of this resignation.
	 *
	 * @return the key to project of this resignation
	 */
	@AutoEscape
	public String getKeyToProject();

	/**
	 * Sets the key to project of this resignation.
	 *
	 * @param keyToProject the key to project of this resignation
	 */
	public void setKeyToProject(String keyToProject);

	/**
	 * Returns the rating of this resignation.
	 *
	 * @return the rating of this resignation
	 */
	@AutoEscape
	public String getRating();

	/**
	 * Sets the rating of this resignation.
	 *
	 * @param rating the rating of this resignation
	 */
	public void setRating(String rating);

	/**
	 * Returns the client impact of this resignation.
	 *
	 * @return the client impact of this resignation
	 */
	@AutoEscape
	public String getClientImpact();

	/**
	 * Sets the client impact of this resignation.
	 *
	 * @param clientImpact the client impact of this resignation
	 */
	public void setClientImpact(String clientImpact);

	/**
	 * Returns the key to retention of this resignation.
	 *
	 * @return the key to retention of this resignation
	 */
	@AutoEscape
	public String getKeyToRetention();

	/**
	 * Sets the key to retention of this resignation.
	 *
	 * @param keyToRetention the key to retention of this resignation
	 */
	public void setKeyToRetention(String keyToRetention);

	/**
	 * Returns the reason non retention of this resignation.
	 *
	 * @return the reason non retention of this resignation
	 */
	@AutoEscape
	public String getReasonNonRetention();

	/**
	 * Sets the reason non retention of this resignation.
	 *
	 * @param reasonNonRetention the reason non retention of this resignation
	 */
	public void setReasonNonRetention(String reasonNonRetention);

	/**
	 * Returns the employee comment of this resignation.
	 *
	 * @return the employee comment of this resignation
	 */
	@AutoEscape
	public String getEmployeeComment();

	/**
	 * Sets the employee comment of this resignation.
	 *
	 * @param employeeComment the employee comment of this resignation
	 */
	public void setEmployeeComment(String employeeComment);

	/**
	 * Returns the hr comment of this resignation.
	 *
	 * @return the hr comment of this resignation
	 */
	@AutoEscape
	public String getHrComment();

	/**
	 * Sets the hr comment of this resignation.
	 *
	 * @param hrComment the hr comment of this resignation
	 */
	public void setHrComment(String hrComment);

	/**
	 * Returns the manager comment of this resignation.
	 *
	 * @return the manager comment of this resignation
	 */
	@AutoEscape
	public String getManagerComment();

	/**
	 * Sets the manager comment of this resignation.
	 *
	 * @param managerComment the manager comment of this resignation
	 */
	public void setManagerComment(String managerComment);

	/**
	 * Returns the emp withdraw comment of this resignation.
	 *
	 * @return the emp withdraw comment of this resignation
	 */
	@AutoEscape
	public String getEmpWithdrawComment();

	/**
	 * Sets the emp withdraw comment of this resignation.
	 *
	 * @param empWithdrawComment the emp withdraw comment of this resignation
	 */
	public void setEmpWithdrawComment(String empWithdrawComment);

	/**
	 * Returns the hr withdraw comment of this resignation.
	 *
	 * @return the hr withdraw comment of this resignation
	 */
	@AutoEscape
	public String getHrWithdrawComment();

	/**
	 * Sets the hr withdraw comment of this resignation.
	 *
	 * @param hrWithdrawComment the hr withdraw comment of this resignation
	 */
	public void setHrWithdrawComment(String hrWithdrawComment);

	/**
	 * Returns the reason for leaving of this resignation.
	 *
	 * @return the reason for leaving of this resignation
	 */
	@AutoEscape
	public String getReasonForLeaving();

	/**
	 * Sets the reason for leaving of this resignation.
	 *
	 * @param reasonForLeaving the reason for leaving of this resignation
	 */
	public void setReasonForLeaving(String reasonForLeaving);

	/**
	 * Returns the reason for leaving by hr of this resignation.
	 *
	 * @return the reason for leaving by hr of this resignation
	 */
	@AutoEscape
	public String getReasonForLeavingByHr();

	/**
	 * Sets the reason for leaving by hr of this resignation.
	 *
	 * @param reasonForLeavingByHr the reason for leaving by hr of this resignation
	 */
	public void setReasonForLeavingByHr(String reasonForLeavingByHr);

	/**
	 * Returns the eligible for rehire of this resignation.
	 *
	 * @return the eligible for rehire of this resignation
	 */
	@AutoEscape
	public String getEligibleForRehire();

	/**
	 * Sets the eligible for rehire of this resignation.
	 *
	 * @param eligibleForRehire the eligible for rehire of this resignation
	 */
	public void setEligibleForRehire(String eligibleForRehire);

	/**
	 * Returns the other issue of this resignation.
	 *
	 * @return the other issue of this resignation
	 */
	@AutoEscape
	public String getOtherIssue();

	/**
	 * Sets the other issue of this resignation.
	 *
	 * @param otherIssue the other issue of this resignation
	 */
	public void setOtherIssue(String otherIssue);

	/**
	 * Returns the replacement plan of this resignation.
	 *
	 * @return the replacement plan of this resignation
	 */
	@AutoEscape
	public String getReplacementPlan();

	/**
	 * Sets the replacement plan of this resignation.
	 *
	 * @param replacementPlan the replacement plan of this resignation
	 */
	public void setReplacementPlan(String replacementPlan);

	/**
	 * Returns the replacement detail of this resignation.
	 *
	 * @return the replacement detail of this resignation
	 */
	@AutoEscape
	public String getReplacementDetail();

	/**
	 * Sets the replacement detail of this resignation.
	 *
	 * @param replacementDetail the replacement detail of this resignation
	 */
	public void setReplacementDetail(String replacementDetail);

	/**
	 * Returns the status of this resignation.
	 *
	 * @return the status of this resignation
	 */
	public int getStatus();

	/**
	 * Sets the status of this resignation.
	 *
	 * @param status the status of this resignation
	 */
	public void setStatus(int status);

	/**
	 * Returns the termination type of this resignation.
	 *
	 * @return the termination type of this resignation
	 */
	@AutoEscape
	public String getTerminationType();

	/**
	 * Sets the termination type of this resignation.
	 *
	 * @param terminationType the termination type of this resignation
	 */
	public void setTerminationType(String terminationType);

	/**
	 * Returns the creation date of this resignation.
	 *
	 * @return the creation date of this resignation
	 */
	public Date getCreationDate();

	/**
	 * Sets the creation date of this resignation.
	 *
	 * @param creationDate the creation date of this resignation
	 */
	public void setCreationDate(Date creationDate);

	/**
	 * Returns the initiated date of this resignation.
	 *
	 * @return the initiated date of this resignation
	 */
	public Date getInitiatedDate();

	/**
	 * Sets the initiated date of this resignation.
	 *
	 * @param initiatedDate the initiated date of this resignation
	 */
	public void setInitiatedDate(Date initiatedDate);

	/**
	 * Returns the mobile of this resignation.
	 *
	 * @return the mobile of this resignation
	 */
	@AutoEscape
	public String getMobile();

	/**
	 * Sets the mobile of this resignation.
	 *
	 * @param mobile the mobile of this resignation
	 */
	public void setMobile(String mobile);

	/**
	 * Returns the notice period of this resignation.
	 *
	 * @return the notice period of this resignation
	 */
	@AutoEscape
	public String getNoticePeriod();

	/**
	 * Sets the notice period of this resignation.
	 *
	 * @param noticePeriod the notice period of this resignation
	 */
	public void setNoticePeriod(String noticePeriod);

	/**
	 * Returns the it assets submission date of this resignation.
	 *
	 * @return the it assets submission date of this resignation
	 */
	public Date getItAssetsSubmissionDate();

	/**
	 * Sets the it assets submission date of this resignation.
	 *
	 * @param itAssetsSubmissionDate the it assets submission date of this resignation
	 */
	public void setItAssetsSubmissionDate(Date itAssetsSubmissionDate);

	/**
	 * Returns the retain employee date of this resignation.
	 *
	 * @return the retain employee date of this resignation
	 */
	public Date getRetainEmployeeDate();

	/**
	 * Sets the retain employee date of this resignation.
	 *
	 * @param retainEmployeeDate the retain employee date of this resignation
	 */
	public void setRetainEmployeeDate(Date retainEmployeeDate);

	/**
	 * Returns the has laptop of this resignation.
	 *
	 * @return the has laptop of this resignation
	 */
	@AutoEscape
	public String getHasLaptop();

	/**
	 * Sets the has laptop of this resignation.
	 *
	 * @param hasLaptop the has laptop of this resignation
	 */
	public void setHasLaptop(String hasLaptop);

	/**
	 * Returns the has mouse of this resignation.
	 *
	 * @return the has mouse of this resignation
	 */
	@AutoEscape
	public String getHasMouse();

	/**
	 * Sets the has mouse of this resignation.
	 *
	 * @param hasMouse the has mouse of this resignation
	 */
	public void setHasMouse(String hasMouse);

	/**
	 * Returns the has charger of this resignation.
	 *
	 * @return the has charger of this resignation
	 */
	@AutoEscape
	public String getHasCharger();

	/**
	 * Sets the has charger of this resignation.
	 *
	 * @param hasCharger the has charger of this resignation
	 */
	public void setHasCharger(String hasCharger);

	/**
	 * Returns the has head set of this resignation.
	 *
	 * @return the has head set of this resignation
	 */
	@AutoEscape
	public String getHasHeadSet();

	/**
	 * Sets the has head set of this resignation.
	 *
	 * @param hasHeadSet the has head set of this resignation
	 */
	public void setHasHeadSet(String hasHeadSet);

	/**
	 * Returns the has laptop bag of this resignation.
	 *
	 * @return the has laptop bag of this resignation
	 */
	@AutoEscape
	public String getHasLaptopBag();

	/**
	 * Sets the has laptop bag of this resignation.
	 *
	 * @param hasLaptopBag the has laptop bag of this resignation
	 */
	public void setHasLaptopBag(String hasLaptopBag);

	/**
	 * Returns the has home desktop of this resignation.
	 *
	 * @return the has home desktop of this resignation
	 */
	@AutoEscape
	public String getHasHomeDesktop();

	/**
	 * Sets the has home desktop of this resignation.
	 *
	 * @param hasHomeDesktop the has home desktop of this resignation
	 */
	public void setHasHomeDesktop(String hasHomeDesktop);

	/**
	 * Returns the has home monitor of this resignation.
	 *
	 * @return the has home monitor of this resignation
	 */
	@AutoEscape
	public String getHasHomeMonitor();

	/**
	 * Sets the has home monitor of this resignation.
	 *
	 * @param hasHomeMonitor the has home monitor of this resignation
	 */
	public void setHasHomeMonitor(String hasHomeMonitor);

	/**
	 * Returns the other assets list of this resignation.
	 *
	 * @return the other assets list of this resignation
	 */
	@AutoEscape
	public String getOtherAssetsList();

	/**
	 * Sets the other assets list of this resignation.
	 *
	 * @param otherAssetsList the other assets list of this resignation
	 */
	public void setOtherAssetsList(String otherAssetsList);

	/**
	 * Returns the exit questionnaire of this resignation.
	 *
	 * @return the exit questionnaire of this resignation
	 */
	public boolean getExitQuestionnaire();

	/**
	 * Returns <code>true</code> if this resignation is exit questionnaire.
	 *
	 * @return <code>true</code> if this resignation is exit questionnaire; <code>false</code> otherwise
	 */
	public boolean isExitQuestionnaire();

	/**
	 * Sets whether this resignation is exit questionnaire.
	 *
	 * @param exitQuestionnaire the exit questionnaire of this resignation
	 */
	public void setExitQuestionnaire(boolean exitQuestionnaire);

	/**
	 * Returns the withdraw count of this resignation.
	 *
	 * @return the withdraw count of this resignation
	 */
	public int getWithdrawCount();

	/**
	 * Sets the withdraw count of this resignation.
	 *
	 * @param withdrawCount the withdraw count of this resignation
	 */
	public void setWithdrawCount(int withdrawCount);

	@Override
	public Resignation cloneWithOriginalValues();

}