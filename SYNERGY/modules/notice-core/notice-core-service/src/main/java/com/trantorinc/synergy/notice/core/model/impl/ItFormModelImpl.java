/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trantorinc.synergy.notice.core.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.trantorinc.synergy.notice.core.model.ItForm;
import com.trantorinc.synergy.notice.core.model.ItFormModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ItForm service. Represents a row in the &quot;NOTICE_ItForm&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ItFormModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ItFormImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ItFormImpl
 * @generated
 */
public class ItFormModelImpl
	extends BaseModelImpl<ItForm> implements ItFormModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a it form model instance should use the <code>ItForm</code> interface instead.
	 */
	public static final String TABLE_NAME = "NOTICE_ItForm";

	public static final Object[][] TABLE_COLUMNS = {
		{"id_", Types.BIGINT}, {"exitId", Types.BIGINT},
		{"ticketNo", Types.INTEGER}, {"ticketNoRemark", Types.VARCHAR},
		{"mailPst", Types.INTEGER}, {"mailPstRemark", Types.VARCHAR},
		{"downloadFolder", Types.INTEGER},
		{"downloadFolderRemark", Types.VARCHAR},
		{"documentFolder", Types.INTEGER},
		{"documentFolderRemark", Types.VARCHAR}, {"otherData", Types.INTEGER},
		{"otherDataRemark", Types.VARCHAR}, {"googleDrive", Types.INTEGER},
		{"googleDriveRemark", Types.VARCHAR}, {"others", Types.INTEGER},
		{"othersRemark", Types.VARCHAR}, {"mailForwarding", Types.INTEGER},
		{"mailForwardingRemark", Types.VARCHAR},
		{"emailDisable", Types.INTEGER}, {"emailDisableRemark", Types.VARCHAR},
		{"systemRecovered", Types.INTEGER},
		{"systemRecoveredRemark", Types.VARCHAR},
		{"clientSystemRecovered", Types.INTEGER},
		{"clientSystemRecoveredRemark", Types.VARCHAR},
		{"accessCardDisable", Types.INTEGER},
		{"accessCardDisableRemark", Types.VARCHAR},
		{"separationDocument", Types.INTEGER},
		{"separationDocumentRemark", Types.VARCHAR},
		{"systemRecoveryAmt", Types.VARCHAR},
		{"systemRecoveryAmtStatus", Types.INTEGER},
		{"systemRecoveryApproved", Types.BOOLEAN},
		{"systemRecoveryComment", Types.VARCHAR},
		{"laptopRecoveryAmt", Types.VARCHAR},
		{"laptopRecoveryAmtStatus", Types.INTEGER},
		{"laptopRecoveryApproved", Types.BOOLEAN},
		{"laptopRecoveryComment", Types.VARCHAR},
		{"communicationRecoveryAmt", Types.VARCHAR},
		{"communicationRecoveryStatus", Types.INTEGER},
		{"communicationRecoveryApproved", Types.BOOLEAN},
		{"communicationRecoveryComment", Types.VARCHAR},
		{"headphoneRecoveryAmt", Types.VARCHAR},
		{"headphoneRecoveryAmtStatus", Types.INTEGER},
		{"headphoneRecoveryApproved", Types.BOOLEAN},
		{"headphoneRecoveryComment", Types.VARCHAR},
		{"laptopBagRecoveryAmt", Types.VARCHAR},
		{"laptopBagRecoveryAmtStatus", Types.INTEGER},
		{"laptopBagRecoveryApproved", Types.BOOLEAN},
		{"laptopBagRecoveryComment", Types.VARCHAR},
		{"monitorRecoveryAmt", Types.VARCHAR},
		{"monitorRecoveryAmtStatus", Types.INTEGER},
		{"monitorRecoveryApproved", Types.BOOLEAN},
		{"monitorRecoveryComment", Types.VARCHAR},
		{"chargerRecoveryAmt", Types.VARCHAR},
		{"chargerRecoveryAmtStatus", Types.INTEGER},
		{"chargerRecoveryApproved", Types.BOOLEAN},
		{"chargerRecoveryComment", Types.VARCHAR},
		{"mouseRecoveryAmt", Types.VARCHAR},
		{"mouseRecoveryAmtStatus", Types.INTEGER},
		{"mouseRecoveryApproved", Types.BOOLEAN},
		{"mouseRecoveryComment", Types.VARCHAR},
		{"updatedDate", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("exitId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ticketNo", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ticketNoRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mailPst", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("mailPstRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("downloadFolder", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("downloadFolderRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("documentFolder", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("documentFolderRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherData", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("otherDataRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("googleDrive", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("googleDriveRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("others", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("othersRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mailForwarding", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("mailForwardingRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("emailDisable", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("emailDisableRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("systemRecovered", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("systemRecoveredRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("clientSystemRecovered", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("clientSystemRecoveredRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("accessCardDisable", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("accessCardDisableRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("separationDocument", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("separationDocumentRemark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("systemRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("systemRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("systemRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("systemRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("laptopRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("laptopRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("laptopRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("laptopRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("communicationRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("communicationRecoveryStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("communicationRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("communicationRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("headphoneRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("headphoneRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("headphoneRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("headphoneRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("laptopBagRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("laptopBagRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("laptopBagRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("laptopBagRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("monitorRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("monitorRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("monitorRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("monitorRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("chargerRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("chargerRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("chargerRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("chargerRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mouseRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mouseRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("mouseRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("mouseRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("updatedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table NOTICE_ItForm (id_ LONG not null primary key,exitId LONG,ticketNo INTEGER,ticketNoRemark VARCHAR(200) null,mailPst INTEGER,mailPstRemark VARCHAR(200) null,downloadFolder INTEGER,downloadFolderRemark VARCHAR(200) null,documentFolder INTEGER,documentFolderRemark VARCHAR(200) null,otherData INTEGER,otherDataRemark VARCHAR(200) null,googleDrive INTEGER,googleDriveRemark VARCHAR(200) null,others INTEGER,othersRemark VARCHAR(200) null,mailForwarding INTEGER,mailForwardingRemark VARCHAR(200) null,emailDisable INTEGER,emailDisableRemark VARCHAR(200) null,systemRecovered INTEGER,systemRecoveredRemark VARCHAR(200) null,clientSystemRecovered INTEGER,clientSystemRecoveredRemark VARCHAR(200) null,accessCardDisable INTEGER,accessCardDisableRemark VARCHAR(200) null,separationDocument INTEGER,separationDocumentRemark VARCHAR(200) null,systemRecoveryAmt VARCHAR(75) null,systemRecoveryAmtStatus INTEGER,systemRecoveryApproved BOOLEAN,systemRecoveryComment VARCHAR(500) null,laptopRecoveryAmt VARCHAR(75) null,laptopRecoveryAmtStatus INTEGER,laptopRecoveryApproved BOOLEAN,laptopRecoveryComment VARCHAR(500) null,communicationRecoveryAmt VARCHAR(75) null,communicationRecoveryStatus INTEGER,communicationRecoveryApproved BOOLEAN,communicationRecoveryComment VARCHAR(500) null,headphoneRecoveryAmt VARCHAR(75) null,headphoneRecoveryAmtStatus INTEGER,headphoneRecoveryApproved BOOLEAN,headphoneRecoveryComment VARCHAR(500) null,laptopBagRecoveryAmt VARCHAR(75) null,laptopBagRecoveryAmtStatus INTEGER,laptopBagRecoveryApproved BOOLEAN,laptopBagRecoveryComment VARCHAR(500) null,monitorRecoveryAmt VARCHAR(75) null,monitorRecoveryAmtStatus INTEGER,monitorRecoveryApproved BOOLEAN,monitorRecoveryComment VARCHAR(500) null,chargerRecoveryAmt VARCHAR(75) null,chargerRecoveryAmtStatus INTEGER,chargerRecoveryApproved BOOLEAN,chargerRecoveryComment VARCHAR(500) null,mouseRecoveryAmt VARCHAR(75) null,mouseRecoveryAmtStatus INTEGER,mouseRecoveryApproved BOOLEAN,mouseRecoveryComment VARCHAR(500) null,updatedDate DATE null)";

	public static final String TABLE_SQL_DROP = "drop table NOTICE_ItForm";

	public static final String ORDER_BY_JPQL = " ORDER BY itForm.id ASC";

	public static final String ORDER_BY_SQL = " ORDER BY NOTICE_ItForm.id_ ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public ItFormModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ItForm.class;
	}

	@Override
	public String getModelClassName() {
		return ItForm.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ItForm, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ItForm, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ItForm, Object> attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((ItForm)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ItForm, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ItForm, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ItForm)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ItForm, Object>> getAttributeGetterFunctions() {
		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ItForm, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<ItForm, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<ItForm, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<ItForm, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<ItForm, Object>>();
		Map<String, BiConsumer<ItForm, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<ItForm, ?>>();

		attributeGetterFunctions.put("id", ItForm::getId);
		attributeSetterBiConsumers.put(
			"id", (BiConsumer<ItForm, Long>)ItForm::setId);
		attributeGetterFunctions.put("exitId", ItForm::getExitId);
		attributeSetterBiConsumers.put(
			"exitId", (BiConsumer<ItForm, Long>)ItForm::setExitId);
		attributeGetterFunctions.put("ticketNo", ItForm::getTicketNo);
		attributeSetterBiConsumers.put(
			"ticketNo", (BiConsumer<ItForm, Integer>)ItForm::setTicketNo);
		attributeGetterFunctions.put(
			"ticketNoRemark", ItForm::getTicketNoRemark);
		attributeSetterBiConsumers.put(
			"ticketNoRemark",
			(BiConsumer<ItForm, String>)ItForm::setTicketNoRemark);
		attributeGetterFunctions.put("mailPst", ItForm::getMailPst);
		attributeSetterBiConsumers.put(
			"mailPst", (BiConsumer<ItForm, Integer>)ItForm::setMailPst);
		attributeGetterFunctions.put("mailPstRemark", ItForm::getMailPstRemark);
		attributeSetterBiConsumers.put(
			"mailPstRemark",
			(BiConsumer<ItForm, String>)ItForm::setMailPstRemark);
		attributeGetterFunctions.put(
			"downloadFolder", ItForm::getDownloadFolder);
		attributeSetterBiConsumers.put(
			"downloadFolder",
			(BiConsumer<ItForm, Integer>)ItForm::setDownloadFolder);
		attributeGetterFunctions.put(
			"downloadFolderRemark", ItForm::getDownloadFolderRemark);
		attributeSetterBiConsumers.put(
			"downloadFolderRemark",
			(BiConsumer<ItForm, String>)ItForm::setDownloadFolderRemark);
		attributeGetterFunctions.put(
			"documentFolder", ItForm::getDocumentFolder);
		attributeSetterBiConsumers.put(
			"documentFolder",
			(BiConsumer<ItForm, Integer>)ItForm::setDocumentFolder);
		attributeGetterFunctions.put(
			"documentFolderRemark", ItForm::getDocumentFolderRemark);
		attributeSetterBiConsumers.put(
			"documentFolderRemark",
			(BiConsumer<ItForm, String>)ItForm::setDocumentFolderRemark);
		attributeGetterFunctions.put("otherData", ItForm::getOtherData);
		attributeSetterBiConsumers.put(
			"otherData", (BiConsumer<ItForm, Integer>)ItForm::setOtherData);
		attributeGetterFunctions.put(
			"otherDataRemark", ItForm::getOtherDataRemark);
		attributeSetterBiConsumers.put(
			"otherDataRemark",
			(BiConsumer<ItForm, String>)ItForm::setOtherDataRemark);
		attributeGetterFunctions.put("googleDrive", ItForm::getGoogleDrive);
		attributeSetterBiConsumers.put(
			"googleDrive", (BiConsumer<ItForm, Integer>)ItForm::setGoogleDrive);
		attributeGetterFunctions.put(
			"googleDriveRemark", ItForm::getGoogleDriveRemark);
		attributeSetterBiConsumers.put(
			"googleDriveRemark",
			(BiConsumer<ItForm, String>)ItForm::setGoogleDriveRemark);
		attributeGetterFunctions.put("others", ItForm::getOthers);
		attributeSetterBiConsumers.put(
			"others", (BiConsumer<ItForm, Integer>)ItForm::setOthers);
		attributeGetterFunctions.put("othersRemark", ItForm::getOthersRemark);
		attributeSetterBiConsumers.put(
			"othersRemark",
			(BiConsumer<ItForm, String>)ItForm::setOthersRemark);
		attributeGetterFunctions.put(
			"mailForwarding", ItForm::getMailForwarding);
		attributeSetterBiConsumers.put(
			"mailForwarding",
			(BiConsumer<ItForm, Integer>)ItForm::setMailForwarding);
		attributeGetterFunctions.put(
			"mailForwardingRemark", ItForm::getMailForwardingRemark);
		attributeSetterBiConsumers.put(
			"mailForwardingRemark",
			(BiConsumer<ItForm, String>)ItForm::setMailForwardingRemark);
		attributeGetterFunctions.put("emailDisable", ItForm::getEmailDisable);
		attributeSetterBiConsumers.put(
			"emailDisable",
			(BiConsumer<ItForm, Integer>)ItForm::setEmailDisable);
		attributeGetterFunctions.put(
			"emailDisableRemark", ItForm::getEmailDisableRemark);
		attributeSetterBiConsumers.put(
			"emailDisableRemark",
			(BiConsumer<ItForm, String>)ItForm::setEmailDisableRemark);
		attributeGetterFunctions.put(
			"systemRecovered", ItForm::getSystemRecovered);
		attributeSetterBiConsumers.put(
			"systemRecovered",
			(BiConsumer<ItForm, Integer>)ItForm::setSystemRecovered);
		attributeGetterFunctions.put(
			"systemRecoveredRemark", ItForm::getSystemRecoveredRemark);
		attributeSetterBiConsumers.put(
			"systemRecoveredRemark",
			(BiConsumer<ItForm, String>)ItForm::setSystemRecoveredRemark);
		attributeGetterFunctions.put(
			"clientSystemRecovered", ItForm::getClientSystemRecovered);
		attributeSetterBiConsumers.put(
			"clientSystemRecovered",
			(BiConsumer<ItForm, Integer>)ItForm::setClientSystemRecovered);
		attributeGetterFunctions.put(
			"clientSystemRecoveredRemark",
			ItForm::getClientSystemRecoveredRemark);
		attributeSetterBiConsumers.put(
			"clientSystemRecoveredRemark",
			(BiConsumer<ItForm, String>)ItForm::setClientSystemRecoveredRemark);
		attributeGetterFunctions.put(
			"accessCardDisable", ItForm::getAccessCardDisable);
		attributeSetterBiConsumers.put(
			"accessCardDisable",
			(BiConsumer<ItForm, Integer>)ItForm::setAccessCardDisable);
		attributeGetterFunctions.put(
			"accessCardDisableRemark", ItForm::getAccessCardDisableRemark);
		attributeSetterBiConsumers.put(
			"accessCardDisableRemark",
			(BiConsumer<ItForm, String>)ItForm::setAccessCardDisableRemark);
		attributeGetterFunctions.put(
			"separationDocument", ItForm::getSeparationDocument);
		attributeSetterBiConsumers.put(
			"separationDocument",
			(BiConsumer<ItForm, Integer>)ItForm::setSeparationDocument);
		attributeGetterFunctions.put(
			"separationDocumentRemark", ItForm::getSeparationDocumentRemark);
		attributeSetterBiConsumers.put(
			"separationDocumentRemark",
			(BiConsumer<ItForm, String>)ItForm::setSeparationDocumentRemark);
		attributeGetterFunctions.put(
			"systemRecoveryAmt", ItForm::getSystemRecoveryAmt);
		attributeSetterBiConsumers.put(
			"systemRecoveryAmt",
			(BiConsumer<ItForm, String>)ItForm::setSystemRecoveryAmt);
		attributeGetterFunctions.put(
			"systemRecoveryAmtStatus", ItForm::getSystemRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"systemRecoveryAmtStatus",
			(BiConsumer<ItForm, Integer>)ItForm::setSystemRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"systemRecoveryApproved", ItForm::getSystemRecoveryApproved);
		attributeSetterBiConsumers.put(
			"systemRecoveryApproved",
			(BiConsumer<ItForm, Boolean>)ItForm::setSystemRecoveryApproved);
		attributeGetterFunctions.put(
			"systemRecoveryComment", ItForm::getSystemRecoveryComment);
		attributeSetterBiConsumers.put(
			"systemRecoveryComment",
			(BiConsumer<ItForm, String>)ItForm::setSystemRecoveryComment);
		attributeGetterFunctions.put(
			"laptopRecoveryAmt", ItForm::getLaptopRecoveryAmt);
		attributeSetterBiConsumers.put(
			"laptopRecoveryAmt",
			(BiConsumer<ItForm, String>)ItForm::setLaptopRecoveryAmt);
		attributeGetterFunctions.put(
			"laptopRecoveryAmtStatus", ItForm::getLaptopRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"laptopRecoveryAmtStatus",
			(BiConsumer<ItForm, Integer>)ItForm::setLaptopRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"laptopRecoveryApproved", ItForm::getLaptopRecoveryApproved);
		attributeSetterBiConsumers.put(
			"laptopRecoveryApproved",
			(BiConsumer<ItForm, Boolean>)ItForm::setLaptopRecoveryApproved);
		attributeGetterFunctions.put(
			"laptopRecoveryComment", ItForm::getLaptopRecoveryComment);
		attributeSetterBiConsumers.put(
			"laptopRecoveryComment",
			(BiConsumer<ItForm, String>)ItForm::setLaptopRecoveryComment);
		attributeGetterFunctions.put(
			"communicationRecoveryAmt", ItForm::getCommunicationRecoveryAmt);
		attributeSetterBiConsumers.put(
			"communicationRecoveryAmt",
			(BiConsumer<ItForm, String>)ItForm::setCommunicationRecoveryAmt);
		attributeGetterFunctions.put(
			"communicationRecoveryStatus",
			ItForm::getCommunicationRecoveryStatus);
		attributeSetterBiConsumers.put(
			"communicationRecoveryStatus",
			(BiConsumer<ItForm, Integer>)
				ItForm::setCommunicationRecoveryStatus);
		attributeGetterFunctions.put(
			"communicationRecoveryApproved",
			ItForm::getCommunicationRecoveryApproved);
		attributeSetterBiConsumers.put(
			"communicationRecoveryApproved",
			(BiConsumer<ItForm, Boolean>)
				ItForm::setCommunicationRecoveryApproved);
		attributeGetterFunctions.put(
			"communicationRecoveryComment",
			ItForm::getCommunicationRecoveryComment);
		attributeSetterBiConsumers.put(
			"communicationRecoveryComment",
			(BiConsumer<ItForm, String>)
				ItForm::setCommunicationRecoveryComment);
		attributeGetterFunctions.put(
			"headphoneRecoveryAmt", ItForm::getHeadphoneRecoveryAmt);
		attributeSetterBiConsumers.put(
			"headphoneRecoveryAmt",
			(BiConsumer<ItForm, String>)ItForm::setHeadphoneRecoveryAmt);
		attributeGetterFunctions.put(
			"headphoneRecoveryAmtStatus",
			ItForm::getHeadphoneRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"headphoneRecoveryAmtStatus",
			(BiConsumer<ItForm, Integer>)ItForm::setHeadphoneRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"headphoneRecoveryApproved", ItForm::getHeadphoneRecoveryApproved);
		attributeSetterBiConsumers.put(
			"headphoneRecoveryApproved",
			(BiConsumer<ItForm, Boolean>)ItForm::setHeadphoneRecoveryApproved);
		attributeGetterFunctions.put(
			"headphoneRecoveryComment", ItForm::getHeadphoneRecoveryComment);
		attributeSetterBiConsumers.put(
			"headphoneRecoveryComment",
			(BiConsumer<ItForm, String>)ItForm::setHeadphoneRecoveryComment);
		attributeGetterFunctions.put(
			"laptopBagRecoveryAmt", ItForm::getLaptopBagRecoveryAmt);
		attributeSetterBiConsumers.put(
			"laptopBagRecoveryAmt",
			(BiConsumer<ItForm, String>)ItForm::setLaptopBagRecoveryAmt);
		attributeGetterFunctions.put(
			"laptopBagRecoveryAmtStatus",
			ItForm::getLaptopBagRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"laptopBagRecoveryAmtStatus",
			(BiConsumer<ItForm, Integer>)ItForm::setLaptopBagRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"laptopBagRecoveryApproved", ItForm::getLaptopBagRecoveryApproved);
		attributeSetterBiConsumers.put(
			"laptopBagRecoveryApproved",
			(BiConsumer<ItForm, Boolean>)ItForm::setLaptopBagRecoveryApproved);
		attributeGetterFunctions.put(
			"laptopBagRecoveryComment", ItForm::getLaptopBagRecoveryComment);
		attributeSetterBiConsumers.put(
			"laptopBagRecoveryComment",
			(BiConsumer<ItForm, String>)ItForm::setLaptopBagRecoveryComment);
		attributeGetterFunctions.put(
			"monitorRecoveryAmt", ItForm::getMonitorRecoveryAmt);
		attributeSetterBiConsumers.put(
			"monitorRecoveryAmt",
			(BiConsumer<ItForm, String>)ItForm::setMonitorRecoveryAmt);
		attributeGetterFunctions.put(
			"monitorRecoveryAmtStatus", ItForm::getMonitorRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"monitorRecoveryAmtStatus",
			(BiConsumer<ItForm, Integer>)ItForm::setMonitorRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"monitorRecoveryApproved", ItForm::getMonitorRecoveryApproved);
		attributeSetterBiConsumers.put(
			"monitorRecoveryApproved",
			(BiConsumer<ItForm, Boolean>)ItForm::setMonitorRecoveryApproved);
		attributeGetterFunctions.put(
			"monitorRecoveryComment", ItForm::getMonitorRecoveryComment);
		attributeSetterBiConsumers.put(
			"monitorRecoveryComment",
			(BiConsumer<ItForm, String>)ItForm::setMonitorRecoveryComment);
		attributeGetterFunctions.put(
			"chargerRecoveryAmt", ItForm::getChargerRecoveryAmt);
		attributeSetterBiConsumers.put(
			"chargerRecoveryAmt",
			(BiConsumer<ItForm, String>)ItForm::setChargerRecoveryAmt);
		attributeGetterFunctions.put(
			"chargerRecoveryAmtStatus", ItForm::getChargerRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"chargerRecoveryAmtStatus",
			(BiConsumer<ItForm, Integer>)ItForm::setChargerRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"chargerRecoveryApproved", ItForm::getChargerRecoveryApproved);
		attributeSetterBiConsumers.put(
			"chargerRecoveryApproved",
			(BiConsumer<ItForm, Boolean>)ItForm::setChargerRecoveryApproved);
		attributeGetterFunctions.put(
			"chargerRecoveryComment", ItForm::getChargerRecoveryComment);
		attributeSetterBiConsumers.put(
			"chargerRecoveryComment",
			(BiConsumer<ItForm, String>)ItForm::setChargerRecoveryComment);
		attributeGetterFunctions.put(
			"mouseRecoveryAmt", ItForm::getMouseRecoveryAmt);
		attributeSetterBiConsumers.put(
			"mouseRecoveryAmt",
			(BiConsumer<ItForm, String>)ItForm::setMouseRecoveryAmt);
		attributeGetterFunctions.put(
			"mouseRecoveryAmtStatus", ItForm::getMouseRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"mouseRecoveryAmtStatus",
			(BiConsumer<ItForm, Integer>)ItForm::setMouseRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"mouseRecoveryApproved", ItForm::getMouseRecoveryApproved);
		attributeSetterBiConsumers.put(
			"mouseRecoveryApproved",
			(BiConsumer<ItForm, Boolean>)ItForm::setMouseRecoveryApproved);
		attributeGetterFunctions.put(
			"mouseRecoveryComment", ItForm::getMouseRecoveryComment);
		attributeSetterBiConsumers.put(
			"mouseRecoveryComment",
			(BiConsumer<ItForm, String>)ItForm::setMouseRecoveryComment);
		attributeGetterFunctions.put("updatedDate", ItForm::getUpdatedDate);
		attributeSetterBiConsumers.put(
			"updatedDate", (BiConsumer<ItForm, Date>)ItForm::setUpdatedDate);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_id = id;
	}

	@Override
	public long getExitId() {
		return _exitId;
	}

	@Override
	public void setExitId(long exitId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_exitId = exitId;
	}

	@Override
	public int getTicketNo() {
		return _ticketNo;
	}

	@Override
	public void setTicketNo(int ticketNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ticketNo = ticketNo;
	}

	@Override
	public String getTicketNoRemark() {
		if (_ticketNoRemark == null) {
			return "";
		}
		else {
			return _ticketNoRemark;
		}
	}

	@Override
	public void setTicketNoRemark(String ticketNoRemark) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ticketNoRemark = ticketNoRemark;
	}

	@Override
	public int getMailPst() {
		return _mailPst;
	}

	@Override
	public void setMailPst(int mailPst) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mailPst = mailPst;
	}

	@Override
	public String getMailPstRemark() {
		if (_mailPstRemark == null) {
			return "";
		}
		else {
			return _mailPstRemark;
		}
	}

	@Override
	public void setMailPstRemark(String mailPstRemark) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mailPstRemark = mailPstRemark;
	}

	@Override
	public int getDownloadFolder() {
		return _downloadFolder;
	}

	@Override
	public void setDownloadFolder(int downloadFolder) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_downloadFolder = downloadFolder;
	}

	@Override
	public String getDownloadFolderRemark() {
		if (_downloadFolderRemark == null) {
			return "";
		}
		else {
			return _downloadFolderRemark;
		}
	}

	@Override
	public void setDownloadFolderRemark(String downloadFolderRemark) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_downloadFolderRemark = downloadFolderRemark;
	}

	@Override
	public int getDocumentFolder() {
		return _documentFolder;
	}

	@Override
	public void setDocumentFolder(int documentFolder) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_documentFolder = documentFolder;
	}

	@Override
	public String getDocumentFolderRemark() {
		if (_documentFolderRemark == null) {
			return "";
		}
		else {
			return _documentFolderRemark;
		}
	}

	@Override
	public void setDocumentFolderRemark(String documentFolderRemark) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_documentFolderRemark = documentFolderRemark;
	}

	@Override
	public int getOtherData() {
		return _otherData;
	}

	@Override
	public void setOtherData(int otherData) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherData = otherData;
	}

	@Override
	public String getOtherDataRemark() {
		if (_otherDataRemark == null) {
			return "";
		}
		else {
			return _otherDataRemark;
		}
	}

	@Override
	public void setOtherDataRemark(String otherDataRemark) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherDataRemark = otherDataRemark;
	}

	@Override
	public int getGoogleDrive() {
		return _googleDrive;
	}

	@Override
	public void setGoogleDrive(int googleDrive) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_googleDrive = googleDrive;
	}

	@Override
	public String getGoogleDriveRemark() {
		if (_googleDriveRemark == null) {
			return "";
		}
		else {
			return _googleDriveRemark;
		}
	}

	@Override
	public void setGoogleDriveRemark(String googleDriveRemark) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_googleDriveRemark = googleDriveRemark;
	}

	@Override
	public int getOthers() {
		return _others;
	}

	@Override
	public void setOthers(int others) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_others = others;
	}

	@Override
	public String getOthersRemark() {
		if (_othersRemark == null) {
			return "";
		}
		else {
			return _othersRemark;
		}
	}

	@Override
	public void setOthersRemark(String othersRemark) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_othersRemark = othersRemark;
	}

	@Override
	public int getMailForwarding() {
		return _mailForwarding;
	}

	@Override
	public void setMailForwarding(int mailForwarding) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mailForwarding = mailForwarding;
	}

	@Override
	public String getMailForwardingRemark() {
		if (_mailForwardingRemark == null) {
			return "";
		}
		else {
			return _mailForwardingRemark;
		}
	}

	@Override
	public void setMailForwardingRemark(String mailForwardingRemark) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mailForwardingRemark = mailForwardingRemark;
	}

	@Override
	public int getEmailDisable() {
		return _emailDisable;
	}

	@Override
	public void setEmailDisable(int emailDisable) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailDisable = emailDisable;
	}

	@Override
	public String getEmailDisableRemark() {
		if (_emailDisableRemark == null) {
			return "";
		}
		else {
			return _emailDisableRemark;
		}
	}

	@Override
	public void setEmailDisableRemark(String emailDisableRemark) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailDisableRemark = emailDisableRemark;
	}

	@Override
	public int getSystemRecovered() {
		return _systemRecovered;
	}

	@Override
	public void setSystemRecovered(int systemRecovered) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_systemRecovered = systemRecovered;
	}

	@Override
	public String getSystemRecoveredRemark() {
		if (_systemRecoveredRemark == null) {
			return "";
		}
		else {
			return _systemRecoveredRemark;
		}
	}

	@Override
	public void setSystemRecoveredRemark(String systemRecoveredRemark) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_systemRecoveredRemark = systemRecoveredRemark;
	}

	@Override
	public int getClientSystemRecovered() {
		return _clientSystemRecovered;
	}

	@Override
	public void setClientSystemRecovered(int clientSystemRecovered) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_clientSystemRecovered = clientSystemRecovered;
	}

	@Override
	public String getClientSystemRecoveredRemark() {
		if (_clientSystemRecoveredRemark == null) {
			return "";
		}
		else {
			return _clientSystemRecoveredRemark;
		}
	}

	@Override
	public void setClientSystemRecoveredRemark(
		String clientSystemRecoveredRemark) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_clientSystemRecoveredRemark = clientSystemRecoveredRemark;
	}

	@Override
	public int getAccessCardDisable() {
		return _accessCardDisable;
	}

	@Override
	public void setAccessCardDisable(int accessCardDisable) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accessCardDisable = accessCardDisable;
	}

	@Override
	public String getAccessCardDisableRemark() {
		if (_accessCardDisableRemark == null) {
			return "";
		}
		else {
			return _accessCardDisableRemark;
		}
	}

	@Override
	public void setAccessCardDisableRemark(String accessCardDisableRemark) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accessCardDisableRemark = accessCardDisableRemark;
	}

	@Override
	public int getSeparationDocument() {
		return _separationDocument;
	}

	@Override
	public void setSeparationDocument(int separationDocument) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_separationDocument = separationDocument;
	}

	@Override
	public String getSeparationDocumentRemark() {
		if (_separationDocumentRemark == null) {
			return "";
		}
		else {
			return _separationDocumentRemark;
		}
	}

	@Override
	public void setSeparationDocumentRemark(String separationDocumentRemark) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_separationDocumentRemark = separationDocumentRemark;
	}

	@Override
	public String getSystemRecoveryAmt() {
		if (_systemRecoveryAmt == null) {
			return "";
		}
		else {
			return _systemRecoveryAmt;
		}
	}

	@Override
	public void setSystemRecoveryAmt(String systemRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_systemRecoveryAmt = systemRecoveryAmt;
	}

	@Override
	public int getSystemRecoveryAmtStatus() {
		return _systemRecoveryAmtStatus;
	}

	@Override
	public void setSystemRecoveryAmtStatus(int systemRecoveryAmtStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_systemRecoveryAmtStatus = systemRecoveryAmtStatus;
	}

	@Override
	public boolean getSystemRecoveryApproved() {
		return _systemRecoveryApproved;
	}

	@Override
	public boolean isSystemRecoveryApproved() {
		return _systemRecoveryApproved;
	}

	@Override
	public void setSystemRecoveryApproved(boolean systemRecoveryApproved) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_systemRecoveryApproved = systemRecoveryApproved;
	}

	@Override
	public String getSystemRecoveryComment() {
		if (_systemRecoveryComment == null) {
			return "";
		}
		else {
			return _systemRecoveryComment;
		}
	}

	@Override
	public void setSystemRecoveryComment(String systemRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_systemRecoveryComment = systemRecoveryComment;
	}

	@Override
	public String getLaptopRecoveryAmt() {
		if (_laptopRecoveryAmt == null) {
			return "";
		}
		else {
			return _laptopRecoveryAmt;
		}
	}

	@Override
	public void setLaptopRecoveryAmt(String laptopRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_laptopRecoveryAmt = laptopRecoveryAmt;
	}

	@Override
	public int getLaptopRecoveryAmtStatus() {
		return _laptopRecoveryAmtStatus;
	}

	@Override
	public void setLaptopRecoveryAmtStatus(int laptopRecoveryAmtStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_laptopRecoveryAmtStatus = laptopRecoveryAmtStatus;
	}

	@Override
	public boolean getLaptopRecoveryApproved() {
		return _laptopRecoveryApproved;
	}

	@Override
	public boolean isLaptopRecoveryApproved() {
		return _laptopRecoveryApproved;
	}

	@Override
	public void setLaptopRecoveryApproved(boolean laptopRecoveryApproved) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_laptopRecoveryApproved = laptopRecoveryApproved;
	}

	@Override
	public String getLaptopRecoveryComment() {
		if (_laptopRecoveryComment == null) {
			return "";
		}
		else {
			return _laptopRecoveryComment;
		}
	}

	@Override
	public void setLaptopRecoveryComment(String laptopRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_laptopRecoveryComment = laptopRecoveryComment;
	}

	@Override
	public String getCommunicationRecoveryAmt() {
		if (_communicationRecoveryAmt == null) {
			return "";
		}
		else {
			return _communicationRecoveryAmt;
		}
	}

	@Override
	public void setCommunicationRecoveryAmt(String communicationRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_communicationRecoveryAmt = communicationRecoveryAmt;
	}

	@Override
	public int getCommunicationRecoveryStatus() {
		return _communicationRecoveryStatus;
	}

	@Override
	public void setCommunicationRecoveryStatus(
		int communicationRecoveryStatus) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_communicationRecoveryStatus = communicationRecoveryStatus;
	}

	@Override
	public boolean getCommunicationRecoveryApproved() {
		return _communicationRecoveryApproved;
	}

	@Override
	public boolean isCommunicationRecoveryApproved() {
		return _communicationRecoveryApproved;
	}

	@Override
	public void setCommunicationRecoveryApproved(
		boolean communicationRecoveryApproved) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_communicationRecoveryApproved = communicationRecoveryApproved;
	}

	@Override
	public String getCommunicationRecoveryComment() {
		if (_communicationRecoveryComment == null) {
			return "";
		}
		else {
			return _communicationRecoveryComment;
		}
	}

	@Override
	public void setCommunicationRecoveryComment(
		String communicationRecoveryComment) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_communicationRecoveryComment = communicationRecoveryComment;
	}

	@Override
	public String getHeadphoneRecoveryAmt() {
		if (_headphoneRecoveryAmt == null) {
			return "";
		}
		else {
			return _headphoneRecoveryAmt;
		}
	}

	@Override
	public void setHeadphoneRecoveryAmt(String headphoneRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_headphoneRecoveryAmt = headphoneRecoveryAmt;
	}

	@Override
	public int getHeadphoneRecoveryAmtStatus() {
		return _headphoneRecoveryAmtStatus;
	}

	@Override
	public void setHeadphoneRecoveryAmtStatus(int headphoneRecoveryAmtStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_headphoneRecoveryAmtStatus = headphoneRecoveryAmtStatus;
	}

	@Override
	public boolean getHeadphoneRecoveryApproved() {
		return _headphoneRecoveryApproved;
	}

	@Override
	public boolean isHeadphoneRecoveryApproved() {
		return _headphoneRecoveryApproved;
	}

	@Override
	public void setHeadphoneRecoveryApproved(
		boolean headphoneRecoveryApproved) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_headphoneRecoveryApproved = headphoneRecoveryApproved;
	}

	@Override
	public String getHeadphoneRecoveryComment() {
		if (_headphoneRecoveryComment == null) {
			return "";
		}
		else {
			return _headphoneRecoveryComment;
		}
	}

	@Override
	public void setHeadphoneRecoveryComment(String headphoneRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_headphoneRecoveryComment = headphoneRecoveryComment;
	}

	@Override
	public String getLaptopBagRecoveryAmt() {
		if (_laptopBagRecoveryAmt == null) {
			return "";
		}
		else {
			return _laptopBagRecoveryAmt;
		}
	}

	@Override
	public void setLaptopBagRecoveryAmt(String laptopBagRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_laptopBagRecoveryAmt = laptopBagRecoveryAmt;
	}

	@Override
	public int getLaptopBagRecoveryAmtStatus() {
		return _laptopBagRecoveryAmtStatus;
	}

	@Override
	public void setLaptopBagRecoveryAmtStatus(int laptopBagRecoveryAmtStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_laptopBagRecoveryAmtStatus = laptopBagRecoveryAmtStatus;
	}

	@Override
	public boolean getLaptopBagRecoveryApproved() {
		return _laptopBagRecoveryApproved;
	}

	@Override
	public boolean isLaptopBagRecoveryApproved() {
		return _laptopBagRecoveryApproved;
	}

	@Override
	public void setLaptopBagRecoveryApproved(
		boolean laptopBagRecoveryApproved) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_laptopBagRecoveryApproved = laptopBagRecoveryApproved;
	}

	@Override
	public String getLaptopBagRecoveryComment() {
		if (_laptopBagRecoveryComment == null) {
			return "";
		}
		else {
			return _laptopBagRecoveryComment;
		}
	}

	@Override
	public void setLaptopBagRecoveryComment(String laptopBagRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_laptopBagRecoveryComment = laptopBagRecoveryComment;
	}

	@Override
	public String getMonitorRecoveryAmt() {
		if (_monitorRecoveryAmt == null) {
			return "";
		}
		else {
			return _monitorRecoveryAmt;
		}
	}

	@Override
	public void setMonitorRecoveryAmt(String monitorRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_monitorRecoveryAmt = monitorRecoveryAmt;
	}

	@Override
	public int getMonitorRecoveryAmtStatus() {
		return _monitorRecoveryAmtStatus;
	}

	@Override
	public void setMonitorRecoveryAmtStatus(int monitorRecoveryAmtStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_monitorRecoveryAmtStatus = monitorRecoveryAmtStatus;
	}

	@Override
	public boolean getMonitorRecoveryApproved() {
		return _monitorRecoveryApproved;
	}

	@Override
	public boolean isMonitorRecoveryApproved() {
		return _monitorRecoveryApproved;
	}

	@Override
	public void setMonitorRecoveryApproved(boolean monitorRecoveryApproved) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_monitorRecoveryApproved = monitorRecoveryApproved;
	}

	@Override
	public String getMonitorRecoveryComment() {
		if (_monitorRecoveryComment == null) {
			return "";
		}
		else {
			return _monitorRecoveryComment;
		}
	}

	@Override
	public void setMonitorRecoveryComment(String monitorRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_monitorRecoveryComment = monitorRecoveryComment;
	}

	@Override
	public String getChargerRecoveryAmt() {
		if (_chargerRecoveryAmt == null) {
			return "";
		}
		else {
			return _chargerRecoveryAmt;
		}
	}

	@Override
	public void setChargerRecoveryAmt(String chargerRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_chargerRecoveryAmt = chargerRecoveryAmt;
	}

	@Override
	public int getChargerRecoveryAmtStatus() {
		return _chargerRecoveryAmtStatus;
	}

	@Override
	public void setChargerRecoveryAmtStatus(int chargerRecoveryAmtStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_chargerRecoveryAmtStatus = chargerRecoveryAmtStatus;
	}

	@Override
	public boolean getChargerRecoveryApproved() {
		return _chargerRecoveryApproved;
	}

	@Override
	public boolean isChargerRecoveryApproved() {
		return _chargerRecoveryApproved;
	}

	@Override
	public void setChargerRecoveryApproved(boolean chargerRecoveryApproved) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_chargerRecoveryApproved = chargerRecoveryApproved;
	}

	@Override
	public String getChargerRecoveryComment() {
		if (_chargerRecoveryComment == null) {
			return "";
		}
		else {
			return _chargerRecoveryComment;
		}
	}

	@Override
	public void setChargerRecoveryComment(String chargerRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_chargerRecoveryComment = chargerRecoveryComment;
	}

	@Override
	public String getMouseRecoveryAmt() {
		if (_mouseRecoveryAmt == null) {
			return "";
		}
		else {
			return _mouseRecoveryAmt;
		}
	}

	@Override
	public void setMouseRecoveryAmt(String mouseRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mouseRecoveryAmt = mouseRecoveryAmt;
	}

	@Override
	public int getMouseRecoveryAmtStatus() {
		return _mouseRecoveryAmtStatus;
	}

	@Override
	public void setMouseRecoveryAmtStatus(int mouseRecoveryAmtStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mouseRecoveryAmtStatus = mouseRecoveryAmtStatus;
	}

	@Override
	public boolean getMouseRecoveryApproved() {
		return _mouseRecoveryApproved;
	}

	@Override
	public boolean isMouseRecoveryApproved() {
		return _mouseRecoveryApproved;
	}

	@Override
	public void setMouseRecoveryApproved(boolean mouseRecoveryApproved) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mouseRecoveryApproved = mouseRecoveryApproved;
	}

	@Override
	public String getMouseRecoveryComment() {
		if (_mouseRecoveryComment == null) {
			return "";
		}
		else {
			return _mouseRecoveryComment;
		}
	}

	@Override
	public void setMouseRecoveryComment(String mouseRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mouseRecoveryComment = mouseRecoveryComment;
	}

	@Override
	public Date getUpdatedDate() {
		return _updatedDate;
	}

	@Override
	public void setUpdatedDate(Date updatedDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_updatedDate = updatedDate;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, ItForm.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ItForm toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ItForm>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ItFormImpl itFormImpl = new ItFormImpl();

		itFormImpl.setId(getId());
		itFormImpl.setExitId(getExitId());
		itFormImpl.setTicketNo(getTicketNo());
		itFormImpl.setTicketNoRemark(getTicketNoRemark());
		itFormImpl.setMailPst(getMailPst());
		itFormImpl.setMailPstRemark(getMailPstRemark());
		itFormImpl.setDownloadFolder(getDownloadFolder());
		itFormImpl.setDownloadFolderRemark(getDownloadFolderRemark());
		itFormImpl.setDocumentFolder(getDocumentFolder());
		itFormImpl.setDocumentFolderRemark(getDocumentFolderRemark());
		itFormImpl.setOtherData(getOtherData());
		itFormImpl.setOtherDataRemark(getOtherDataRemark());
		itFormImpl.setGoogleDrive(getGoogleDrive());
		itFormImpl.setGoogleDriveRemark(getGoogleDriveRemark());
		itFormImpl.setOthers(getOthers());
		itFormImpl.setOthersRemark(getOthersRemark());
		itFormImpl.setMailForwarding(getMailForwarding());
		itFormImpl.setMailForwardingRemark(getMailForwardingRemark());
		itFormImpl.setEmailDisable(getEmailDisable());
		itFormImpl.setEmailDisableRemark(getEmailDisableRemark());
		itFormImpl.setSystemRecovered(getSystemRecovered());
		itFormImpl.setSystemRecoveredRemark(getSystemRecoveredRemark());
		itFormImpl.setClientSystemRecovered(getClientSystemRecovered());
		itFormImpl.setClientSystemRecoveredRemark(
			getClientSystemRecoveredRemark());
		itFormImpl.setAccessCardDisable(getAccessCardDisable());
		itFormImpl.setAccessCardDisableRemark(getAccessCardDisableRemark());
		itFormImpl.setSeparationDocument(getSeparationDocument());
		itFormImpl.setSeparationDocumentRemark(getSeparationDocumentRemark());
		itFormImpl.setSystemRecoveryAmt(getSystemRecoveryAmt());
		itFormImpl.setSystemRecoveryAmtStatus(getSystemRecoveryAmtStatus());
		itFormImpl.setSystemRecoveryApproved(isSystemRecoveryApproved());
		itFormImpl.setSystemRecoveryComment(getSystemRecoveryComment());
		itFormImpl.setLaptopRecoveryAmt(getLaptopRecoveryAmt());
		itFormImpl.setLaptopRecoveryAmtStatus(getLaptopRecoveryAmtStatus());
		itFormImpl.setLaptopRecoveryApproved(isLaptopRecoveryApproved());
		itFormImpl.setLaptopRecoveryComment(getLaptopRecoveryComment());
		itFormImpl.setCommunicationRecoveryAmt(getCommunicationRecoveryAmt());
		itFormImpl.setCommunicationRecoveryStatus(
			getCommunicationRecoveryStatus());
		itFormImpl.setCommunicationRecoveryApproved(
			isCommunicationRecoveryApproved());
		itFormImpl.setCommunicationRecoveryComment(
			getCommunicationRecoveryComment());
		itFormImpl.setHeadphoneRecoveryAmt(getHeadphoneRecoveryAmt());
		itFormImpl.setHeadphoneRecoveryAmtStatus(
			getHeadphoneRecoveryAmtStatus());
		itFormImpl.setHeadphoneRecoveryApproved(isHeadphoneRecoveryApproved());
		itFormImpl.setHeadphoneRecoveryComment(getHeadphoneRecoveryComment());
		itFormImpl.setLaptopBagRecoveryAmt(getLaptopBagRecoveryAmt());
		itFormImpl.setLaptopBagRecoveryAmtStatus(
			getLaptopBagRecoveryAmtStatus());
		itFormImpl.setLaptopBagRecoveryApproved(isLaptopBagRecoveryApproved());
		itFormImpl.setLaptopBagRecoveryComment(getLaptopBagRecoveryComment());
		itFormImpl.setMonitorRecoveryAmt(getMonitorRecoveryAmt());
		itFormImpl.setMonitorRecoveryAmtStatus(getMonitorRecoveryAmtStatus());
		itFormImpl.setMonitorRecoveryApproved(isMonitorRecoveryApproved());
		itFormImpl.setMonitorRecoveryComment(getMonitorRecoveryComment());
		itFormImpl.setChargerRecoveryAmt(getChargerRecoveryAmt());
		itFormImpl.setChargerRecoveryAmtStatus(getChargerRecoveryAmtStatus());
		itFormImpl.setChargerRecoveryApproved(isChargerRecoveryApproved());
		itFormImpl.setChargerRecoveryComment(getChargerRecoveryComment());
		itFormImpl.setMouseRecoveryAmt(getMouseRecoveryAmt());
		itFormImpl.setMouseRecoveryAmtStatus(getMouseRecoveryAmtStatus());
		itFormImpl.setMouseRecoveryApproved(isMouseRecoveryApproved());
		itFormImpl.setMouseRecoveryComment(getMouseRecoveryComment());
		itFormImpl.setUpdatedDate(getUpdatedDate());

		itFormImpl.resetOriginalValues();

		return itFormImpl;
	}

	@Override
	public ItForm cloneWithOriginalValues() {
		ItFormImpl itFormImpl = new ItFormImpl();

		itFormImpl.setId(this.<Long>getColumnOriginalValue("id_"));
		itFormImpl.setExitId(this.<Long>getColumnOriginalValue("exitId"));
		itFormImpl.setTicketNo(
			this.<Integer>getColumnOriginalValue("ticketNo"));
		itFormImpl.setTicketNoRemark(
			this.<String>getColumnOriginalValue("ticketNoRemark"));
		itFormImpl.setMailPst(this.<Integer>getColumnOriginalValue("mailPst"));
		itFormImpl.setMailPstRemark(
			this.<String>getColumnOriginalValue("mailPstRemark"));
		itFormImpl.setDownloadFolder(
			this.<Integer>getColumnOriginalValue("downloadFolder"));
		itFormImpl.setDownloadFolderRemark(
			this.<String>getColumnOriginalValue("downloadFolderRemark"));
		itFormImpl.setDocumentFolder(
			this.<Integer>getColumnOriginalValue("documentFolder"));
		itFormImpl.setDocumentFolderRemark(
			this.<String>getColumnOriginalValue("documentFolderRemark"));
		itFormImpl.setOtherData(
			this.<Integer>getColumnOriginalValue("otherData"));
		itFormImpl.setOtherDataRemark(
			this.<String>getColumnOriginalValue("otherDataRemark"));
		itFormImpl.setGoogleDrive(
			this.<Integer>getColumnOriginalValue("googleDrive"));
		itFormImpl.setGoogleDriveRemark(
			this.<String>getColumnOriginalValue("googleDriveRemark"));
		itFormImpl.setOthers(this.<Integer>getColumnOriginalValue("others"));
		itFormImpl.setOthersRemark(
			this.<String>getColumnOriginalValue("othersRemark"));
		itFormImpl.setMailForwarding(
			this.<Integer>getColumnOriginalValue("mailForwarding"));
		itFormImpl.setMailForwardingRemark(
			this.<String>getColumnOriginalValue("mailForwardingRemark"));
		itFormImpl.setEmailDisable(
			this.<Integer>getColumnOriginalValue("emailDisable"));
		itFormImpl.setEmailDisableRemark(
			this.<String>getColumnOriginalValue("emailDisableRemark"));
		itFormImpl.setSystemRecovered(
			this.<Integer>getColumnOriginalValue("systemRecovered"));
		itFormImpl.setSystemRecoveredRemark(
			this.<String>getColumnOriginalValue("systemRecoveredRemark"));
		itFormImpl.setClientSystemRecovered(
			this.<Integer>getColumnOriginalValue("clientSystemRecovered"));
		itFormImpl.setClientSystemRecoveredRemark(
			this.<String>getColumnOriginalValue("clientSystemRecoveredRemark"));
		itFormImpl.setAccessCardDisable(
			this.<Integer>getColumnOriginalValue("accessCardDisable"));
		itFormImpl.setAccessCardDisableRemark(
			this.<String>getColumnOriginalValue("accessCardDisableRemark"));
		itFormImpl.setSeparationDocument(
			this.<Integer>getColumnOriginalValue("separationDocument"));
		itFormImpl.setSeparationDocumentRemark(
			this.<String>getColumnOriginalValue("separationDocumentRemark"));
		itFormImpl.setSystemRecoveryAmt(
			this.<String>getColumnOriginalValue("systemRecoveryAmt"));
		itFormImpl.setSystemRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue("systemRecoveryAmtStatus"));
		itFormImpl.setSystemRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("systemRecoveryApproved"));
		itFormImpl.setSystemRecoveryComment(
			this.<String>getColumnOriginalValue("systemRecoveryComment"));
		itFormImpl.setLaptopRecoveryAmt(
			this.<String>getColumnOriginalValue("laptopRecoveryAmt"));
		itFormImpl.setLaptopRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue("laptopRecoveryAmtStatus"));
		itFormImpl.setLaptopRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("laptopRecoveryApproved"));
		itFormImpl.setLaptopRecoveryComment(
			this.<String>getColumnOriginalValue("laptopRecoveryComment"));
		itFormImpl.setCommunicationRecoveryAmt(
			this.<String>getColumnOriginalValue("communicationRecoveryAmt"));
		itFormImpl.setCommunicationRecoveryStatus(
			this.<Integer>getColumnOriginalValue(
				"communicationRecoveryStatus"));
		itFormImpl.setCommunicationRecoveryApproved(
			this.<Boolean>getColumnOriginalValue(
				"communicationRecoveryApproved"));
		itFormImpl.setCommunicationRecoveryComment(
			this.<String>getColumnOriginalValue(
				"communicationRecoveryComment"));
		itFormImpl.setHeadphoneRecoveryAmt(
			this.<String>getColumnOriginalValue("headphoneRecoveryAmt"));
		itFormImpl.setHeadphoneRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue("headphoneRecoveryAmtStatus"));
		itFormImpl.setHeadphoneRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("headphoneRecoveryApproved"));
		itFormImpl.setHeadphoneRecoveryComment(
			this.<String>getColumnOriginalValue("headphoneRecoveryComment"));
		itFormImpl.setLaptopBagRecoveryAmt(
			this.<String>getColumnOriginalValue("laptopBagRecoveryAmt"));
		itFormImpl.setLaptopBagRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue("laptopBagRecoveryAmtStatus"));
		itFormImpl.setLaptopBagRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("laptopBagRecoveryApproved"));
		itFormImpl.setLaptopBagRecoveryComment(
			this.<String>getColumnOriginalValue("laptopBagRecoveryComment"));
		itFormImpl.setMonitorRecoveryAmt(
			this.<String>getColumnOriginalValue("monitorRecoveryAmt"));
		itFormImpl.setMonitorRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue("monitorRecoveryAmtStatus"));
		itFormImpl.setMonitorRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("monitorRecoveryApproved"));
		itFormImpl.setMonitorRecoveryComment(
			this.<String>getColumnOriginalValue("monitorRecoveryComment"));
		itFormImpl.setChargerRecoveryAmt(
			this.<String>getColumnOriginalValue("chargerRecoveryAmt"));
		itFormImpl.setChargerRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue("chargerRecoveryAmtStatus"));
		itFormImpl.setChargerRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("chargerRecoveryApproved"));
		itFormImpl.setChargerRecoveryComment(
			this.<String>getColumnOriginalValue("chargerRecoveryComment"));
		itFormImpl.setMouseRecoveryAmt(
			this.<String>getColumnOriginalValue("mouseRecoveryAmt"));
		itFormImpl.setMouseRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue("mouseRecoveryAmtStatus"));
		itFormImpl.setMouseRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("mouseRecoveryApproved"));
		itFormImpl.setMouseRecoveryComment(
			this.<String>getColumnOriginalValue("mouseRecoveryComment"));
		itFormImpl.setUpdatedDate(
			this.<Date>getColumnOriginalValue("updatedDate"));

		return itFormImpl;
	}

	@Override
	public int compareTo(ItForm itForm) {
		long primaryKey = itForm.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof ItForm)) {
			return false;
		}

		ItForm itForm = (ItForm)object;

		long primaryKey = itForm.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<ItForm> toCacheModel() {
		ItFormCacheModel itFormCacheModel = new ItFormCacheModel();

		itFormCacheModel.id = getId();

		itFormCacheModel.exitId = getExitId();

		itFormCacheModel.ticketNo = getTicketNo();

		itFormCacheModel.ticketNoRemark = getTicketNoRemark();

		String ticketNoRemark = itFormCacheModel.ticketNoRemark;

		if ((ticketNoRemark != null) && (ticketNoRemark.length() == 0)) {
			itFormCacheModel.ticketNoRemark = null;
		}

		itFormCacheModel.mailPst = getMailPst();

		itFormCacheModel.mailPstRemark = getMailPstRemark();

		String mailPstRemark = itFormCacheModel.mailPstRemark;

		if ((mailPstRemark != null) && (mailPstRemark.length() == 0)) {
			itFormCacheModel.mailPstRemark = null;
		}

		itFormCacheModel.downloadFolder = getDownloadFolder();

		itFormCacheModel.downloadFolderRemark = getDownloadFolderRemark();

		String downloadFolderRemark = itFormCacheModel.downloadFolderRemark;

		if ((downloadFolderRemark != null) &&
			(downloadFolderRemark.length() == 0)) {

			itFormCacheModel.downloadFolderRemark = null;
		}

		itFormCacheModel.documentFolder = getDocumentFolder();

		itFormCacheModel.documentFolderRemark = getDocumentFolderRemark();

		String documentFolderRemark = itFormCacheModel.documentFolderRemark;

		if ((documentFolderRemark != null) &&
			(documentFolderRemark.length() == 0)) {

			itFormCacheModel.documentFolderRemark = null;
		}

		itFormCacheModel.otherData = getOtherData();

		itFormCacheModel.otherDataRemark = getOtherDataRemark();

		String otherDataRemark = itFormCacheModel.otherDataRemark;

		if ((otherDataRemark != null) && (otherDataRemark.length() == 0)) {
			itFormCacheModel.otherDataRemark = null;
		}

		itFormCacheModel.googleDrive = getGoogleDrive();

		itFormCacheModel.googleDriveRemark = getGoogleDriveRemark();

		String googleDriveRemark = itFormCacheModel.googleDriveRemark;

		if ((googleDriveRemark != null) && (googleDriveRemark.length() == 0)) {
			itFormCacheModel.googleDriveRemark = null;
		}

		itFormCacheModel.others = getOthers();

		itFormCacheModel.othersRemark = getOthersRemark();

		String othersRemark = itFormCacheModel.othersRemark;

		if ((othersRemark != null) && (othersRemark.length() == 0)) {
			itFormCacheModel.othersRemark = null;
		}

		itFormCacheModel.mailForwarding = getMailForwarding();

		itFormCacheModel.mailForwardingRemark = getMailForwardingRemark();

		String mailForwardingRemark = itFormCacheModel.mailForwardingRemark;

		if ((mailForwardingRemark != null) &&
			(mailForwardingRemark.length() == 0)) {

			itFormCacheModel.mailForwardingRemark = null;
		}

		itFormCacheModel.emailDisable = getEmailDisable();

		itFormCacheModel.emailDisableRemark = getEmailDisableRemark();

		String emailDisableRemark = itFormCacheModel.emailDisableRemark;

		if ((emailDisableRemark != null) &&
			(emailDisableRemark.length() == 0)) {

			itFormCacheModel.emailDisableRemark = null;
		}

		itFormCacheModel.systemRecovered = getSystemRecovered();

		itFormCacheModel.systemRecoveredRemark = getSystemRecoveredRemark();

		String systemRecoveredRemark = itFormCacheModel.systemRecoveredRemark;

		if ((systemRecoveredRemark != null) &&
			(systemRecoveredRemark.length() == 0)) {

			itFormCacheModel.systemRecoveredRemark = null;
		}

		itFormCacheModel.clientSystemRecovered = getClientSystemRecovered();

		itFormCacheModel.clientSystemRecoveredRemark =
			getClientSystemRecoveredRemark();

		String clientSystemRecoveredRemark =
			itFormCacheModel.clientSystemRecoveredRemark;

		if ((clientSystemRecoveredRemark != null) &&
			(clientSystemRecoveredRemark.length() == 0)) {

			itFormCacheModel.clientSystemRecoveredRemark = null;
		}

		itFormCacheModel.accessCardDisable = getAccessCardDisable();

		itFormCacheModel.accessCardDisableRemark = getAccessCardDisableRemark();

		String accessCardDisableRemark =
			itFormCacheModel.accessCardDisableRemark;

		if ((accessCardDisableRemark != null) &&
			(accessCardDisableRemark.length() == 0)) {

			itFormCacheModel.accessCardDisableRemark = null;
		}

		itFormCacheModel.separationDocument = getSeparationDocument();

		itFormCacheModel.separationDocumentRemark =
			getSeparationDocumentRemark();

		String separationDocumentRemark =
			itFormCacheModel.separationDocumentRemark;

		if ((separationDocumentRemark != null) &&
			(separationDocumentRemark.length() == 0)) {

			itFormCacheModel.separationDocumentRemark = null;
		}

		itFormCacheModel.systemRecoveryAmt = getSystemRecoveryAmt();

		String systemRecoveryAmt = itFormCacheModel.systemRecoveryAmt;

		if ((systemRecoveryAmt != null) && (systemRecoveryAmt.length() == 0)) {
			itFormCacheModel.systemRecoveryAmt = null;
		}

		itFormCacheModel.systemRecoveryAmtStatus = getSystemRecoveryAmtStatus();

		itFormCacheModel.systemRecoveryApproved = isSystemRecoveryApproved();

		itFormCacheModel.systemRecoveryComment = getSystemRecoveryComment();

		String systemRecoveryComment = itFormCacheModel.systemRecoveryComment;

		if ((systemRecoveryComment != null) &&
			(systemRecoveryComment.length() == 0)) {

			itFormCacheModel.systemRecoveryComment = null;
		}

		itFormCacheModel.laptopRecoveryAmt = getLaptopRecoveryAmt();

		String laptopRecoveryAmt = itFormCacheModel.laptopRecoveryAmt;

		if ((laptopRecoveryAmt != null) && (laptopRecoveryAmt.length() == 0)) {
			itFormCacheModel.laptopRecoveryAmt = null;
		}

		itFormCacheModel.laptopRecoveryAmtStatus = getLaptopRecoveryAmtStatus();

		itFormCacheModel.laptopRecoveryApproved = isLaptopRecoveryApproved();

		itFormCacheModel.laptopRecoveryComment = getLaptopRecoveryComment();

		String laptopRecoveryComment = itFormCacheModel.laptopRecoveryComment;

		if ((laptopRecoveryComment != null) &&
			(laptopRecoveryComment.length() == 0)) {

			itFormCacheModel.laptopRecoveryComment = null;
		}

		itFormCacheModel.communicationRecoveryAmt =
			getCommunicationRecoveryAmt();

		String communicationRecoveryAmt =
			itFormCacheModel.communicationRecoveryAmt;

		if ((communicationRecoveryAmt != null) &&
			(communicationRecoveryAmt.length() == 0)) {

			itFormCacheModel.communicationRecoveryAmt = null;
		}

		itFormCacheModel.communicationRecoveryStatus =
			getCommunicationRecoveryStatus();

		itFormCacheModel.communicationRecoveryApproved =
			isCommunicationRecoveryApproved();

		itFormCacheModel.communicationRecoveryComment =
			getCommunicationRecoveryComment();

		String communicationRecoveryComment =
			itFormCacheModel.communicationRecoveryComment;

		if ((communicationRecoveryComment != null) &&
			(communicationRecoveryComment.length() == 0)) {

			itFormCacheModel.communicationRecoveryComment = null;
		}

		itFormCacheModel.headphoneRecoveryAmt = getHeadphoneRecoveryAmt();

		String headphoneRecoveryAmt = itFormCacheModel.headphoneRecoveryAmt;

		if ((headphoneRecoveryAmt != null) &&
			(headphoneRecoveryAmt.length() == 0)) {

			itFormCacheModel.headphoneRecoveryAmt = null;
		}

		itFormCacheModel.headphoneRecoveryAmtStatus =
			getHeadphoneRecoveryAmtStatus();

		itFormCacheModel.headphoneRecoveryApproved =
			isHeadphoneRecoveryApproved();

		itFormCacheModel.headphoneRecoveryComment =
			getHeadphoneRecoveryComment();

		String headphoneRecoveryComment =
			itFormCacheModel.headphoneRecoveryComment;

		if ((headphoneRecoveryComment != null) &&
			(headphoneRecoveryComment.length() == 0)) {

			itFormCacheModel.headphoneRecoveryComment = null;
		}

		itFormCacheModel.laptopBagRecoveryAmt = getLaptopBagRecoveryAmt();

		String laptopBagRecoveryAmt = itFormCacheModel.laptopBagRecoveryAmt;

		if ((laptopBagRecoveryAmt != null) &&
			(laptopBagRecoveryAmt.length() == 0)) {

			itFormCacheModel.laptopBagRecoveryAmt = null;
		}

		itFormCacheModel.laptopBagRecoveryAmtStatus =
			getLaptopBagRecoveryAmtStatus();

		itFormCacheModel.laptopBagRecoveryApproved =
			isLaptopBagRecoveryApproved();

		itFormCacheModel.laptopBagRecoveryComment =
			getLaptopBagRecoveryComment();

		String laptopBagRecoveryComment =
			itFormCacheModel.laptopBagRecoveryComment;

		if ((laptopBagRecoveryComment != null) &&
			(laptopBagRecoveryComment.length() == 0)) {

			itFormCacheModel.laptopBagRecoveryComment = null;
		}

		itFormCacheModel.monitorRecoveryAmt = getMonitorRecoveryAmt();

		String monitorRecoveryAmt = itFormCacheModel.monitorRecoveryAmt;

		if ((monitorRecoveryAmt != null) &&
			(monitorRecoveryAmt.length() == 0)) {

			itFormCacheModel.monitorRecoveryAmt = null;
		}

		itFormCacheModel.monitorRecoveryAmtStatus =
			getMonitorRecoveryAmtStatus();

		itFormCacheModel.monitorRecoveryApproved = isMonitorRecoveryApproved();

		itFormCacheModel.monitorRecoveryComment = getMonitorRecoveryComment();

		String monitorRecoveryComment = itFormCacheModel.monitorRecoveryComment;

		if ((monitorRecoveryComment != null) &&
			(monitorRecoveryComment.length() == 0)) {

			itFormCacheModel.monitorRecoveryComment = null;
		}

		itFormCacheModel.chargerRecoveryAmt = getChargerRecoveryAmt();

		String chargerRecoveryAmt = itFormCacheModel.chargerRecoveryAmt;

		if ((chargerRecoveryAmt != null) &&
			(chargerRecoveryAmt.length() == 0)) {

			itFormCacheModel.chargerRecoveryAmt = null;
		}

		itFormCacheModel.chargerRecoveryAmtStatus =
			getChargerRecoveryAmtStatus();

		itFormCacheModel.chargerRecoveryApproved = isChargerRecoveryApproved();

		itFormCacheModel.chargerRecoveryComment = getChargerRecoveryComment();

		String chargerRecoveryComment = itFormCacheModel.chargerRecoveryComment;

		if ((chargerRecoveryComment != null) &&
			(chargerRecoveryComment.length() == 0)) {

			itFormCacheModel.chargerRecoveryComment = null;
		}

		itFormCacheModel.mouseRecoveryAmt = getMouseRecoveryAmt();

		String mouseRecoveryAmt = itFormCacheModel.mouseRecoveryAmt;

		if ((mouseRecoveryAmt != null) && (mouseRecoveryAmt.length() == 0)) {
			itFormCacheModel.mouseRecoveryAmt = null;
		}

		itFormCacheModel.mouseRecoveryAmtStatus = getMouseRecoveryAmtStatus();

		itFormCacheModel.mouseRecoveryApproved = isMouseRecoveryApproved();

		itFormCacheModel.mouseRecoveryComment = getMouseRecoveryComment();

		String mouseRecoveryComment = itFormCacheModel.mouseRecoveryComment;

		if ((mouseRecoveryComment != null) &&
			(mouseRecoveryComment.length() == 0)) {

			itFormCacheModel.mouseRecoveryComment = null;
		}

		Date updatedDate = getUpdatedDate();

		if (updatedDate != null) {
			itFormCacheModel.updatedDate = updatedDate.getTime();
		}
		else {
			itFormCacheModel.updatedDate = Long.MIN_VALUE;
		}

		return itFormCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ItForm, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ItForm, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ItForm, Object> attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((ItForm)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, ItForm>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					ItForm.class, ModelWrapper.class);

	}

	private long _id;
	private long _exitId;
	private int _ticketNo;
	private String _ticketNoRemark;
	private int _mailPst;
	private String _mailPstRemark;
	private int _downloadFolder;
	private String _downloadFolderRemark;
	private int _documentFolder;
	private String _documentFolderRemark;
	private int _otherData;
	private String _otherDataRemark;
	private int _googleDrive;
	private String _googleDriveRemark;
	private int _others;
	private String _othersRemark;
	private int _mailForwarding;
	private String _mailForwardingRemark;
	private int _emailDisable;
	private String _emailDisableRemark;
	private int _systemRecovered;
	private String _systemRecoveredRemark;
	private int _clientSystemRecovered;
	private String _clientSystemRecoveredRemark;
	private int _accessCardDisable;
	private String _accessCardDisableRemark;
	private int _separationDocument;
	private String _separationDocumentRemark;
	private String _systemRecoveryAmt;
	private int _systemRecoveryAmtStatus;
	private boolean _systemRecoveryApproved;
	private String _systemRecoveryComment;
	private String _laptopRecoveryAmt;
	private int _laptopRecoveryAmtStatus;
	private boolean _laptopRecoveryApproved;
	private String _laptopRecoveryComment;
	private String _communicationRecoveryAmt;
	private int _communicationRecoveryStatus;
	private boolean _communicationRecoveryApproved;
	private String _communicationRecoveryComment;
	private String _headphoneRecoveryAmt;
	private int _headphoneRecoveryAmtStatus;
	private boolean _headphoneRecoveryApproved;
	private String _headphoneRecoveryComment;
	private String _laptopBagRecoveryAmt;
	private int _laptopBagRecoveryAmtStatus;
	private boolean _laptopBagRecoveryApproved;
	private String _laptopBagRecoveryComment;
	private String _monitorRecoveryAmt;
	private int _monitorRecoveryAmtStatus;
	private boolean _monitorRecoveryApproved;
	private String _monitorRecoveryComment;
	private String _chargerRecoveryAmt;
	private int _chargerRecoveryAmtStatus;
	private boolean _chargerRecoveryApproved;
	private String _chargerRecoveryComment;
	private String _mouseRecoveryAmt;
	private int _mouseRecoveryAmtStatus;
	private boolean _mouseRecoveryApproved;
	private String _mouseRecoveryComment;
	private Date _updatedDate;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<ItForm, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((ItForm)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("id_", _id);
		_columnOriginalValues.put("exitId", _exitId);
		_columnOriginalValues.put("ticketNo", _ticketNo);
		_columnOriginalValues.put("ticketNoRemark", _ticketNoRemark);
		_columnOriginalValues.put("mailPst", _mailPst);
		_columnOriginalValues.put("mailPstRemark", _mailPstRemark);
		_columnOriginalValues.put("downloadFolder", _downloadFolder);
		_columnOriginalValues.put(
			"downloadFolderRemark", _downloadFolderRemark);
		_columnOriginalValues.put("documentFolder", _documentFolder);
		_columnOriginalValues.put(
			"documentFolderRemark", _documentFolderRemark);
		_columnOriginalValues.put("otherData", _otherData);
		_columnOriginalValues.put("otherDataRemark", _otherDataRemark);
		_columnOriginalValues.put("googleDrive", _googleDrive);
		_columnOriginalValues.put("googleDriveRemark", _googleDriveRemark);
		_columnOriginalValues.put("others", _others);
		_columnOriginalValues.put("othersRemark", _othersRemark);
		_columnOriginalValues.put("mailForwarding", _mailForwarding);
		_columnOriginalValues.put(
			"mailForwardingRemark", _mailForwardingRemark);
		_columnOriginalValues.put("emailDisable", _emailDisable);
		_columnOriginalValues.put("emailDisableRemark", _emailDisableRemark);
		_columnOriginalValues.put("systemRecovered", _systemRecovered);
		_columnOriginalValues.put(
			"systemRecoveredRemark", _systemRecoveredRemark);
		_columnOriginalValues.put(
			"clientSystemRecovered", _clientSystemRecovered);
		_columnOriginalValues.put(
			"clientSystemRecoveredRemark", _clientSystemRecoveredRemark);
		_columnOriginalValues.put("accessCardDisable", _accessCardDisable);
		_columnOriginalValues.put(
			"accessCardDisableRemark", _accessCardDisableRemark);
		_columnOriginalValues.put("separationDocument", _separationDocument);
		_columnOriginalValues.put(
			"separationDocumentRemark", _separationDocumentRemark);
		_columnOriginalValues.put("systemRecoveryAmt", _systemRecoveryAmt);
		_columnOriginalValues.put(
			"systemRecoveryAmtStatus", _systemRecoveryAmtStatus);
		_columnOriginalValues.put(
			"systemRecoveryApproved", _systemRecoveryApproved);
		_columnOriginalValues.put(
			"systemRecoveryComment", _systemRecoveryComment);
		_columnOriginalValues.put("laptopRecoveryAmt", _laptopRecoveryAmt);
		_columnOriginalValues.put(
			"laptopRecoveryAmtStatus", _laptopRecoveryAmtStatus);
		_columnOriginalValues.put(
			"laptopRecoveryApproved", _laptopRecoveryApproved);
		_columnOriginalValues.put(
			"laptopRecoveryComment", _laptopRecoveryComment);
		_columnOriginalValues.put(
			"communicationRecoveryAmt", _communicationRecoveryAmt);
		_columnOriginalValues.put(
			"communicationRecoveryStatus", _communicationRecoveryStatus);
		_columnOriginalValues.put(
			"communicationRecoveryApproved", _communicationRecoveryApproved);
		_columnOriginalValues.put(
			"communicationRecoveryComment", _communicationRecoveryComment);
		_columnOriginalValues.put(
			"headphoneRecoveryAmt", _headphoneRecoveryAmt);
		_columnOriginalValues.put(
			"headphoneRecoveryAmtStatus", _headphoneRecoveryAmtStatus);
		_columnOriginalValues.put(
			"headphoneRecoveryApproved", _headphoneRecoveryApproved);
		_columnOriginalValues.put(
			"headphoneRecoveryComment", _headphoneRecoveryComment);
		_columnOriginalValues.put(
			"laptopBagRecoveryAmt", _laptopBagRecoveryAmt);
		_columnOriginalValues.put(
			"laptopBagRecoveryAmtStatus", _laptopBagRecoveryAmtStatus);
		_columnOriginalValues.put(
			"laptopBagRecoveryApproved", _laptopBagRecoveryApproved);
		_columnOriginalValues.put(
			"laptopBagRecoveryComment", _laptopBagRecoveryComment);
		_columnOriginalValues.put("monitorRecoveryAmt", _monitorRecoveryAmt);
		_columnOriginalValues.put(
			"monitorRecoveryAmtStatus", _monitorRecoveryAmtStatus);
		_columnOriginalValues.put(
			"monitorRecoveryApproved", _monitorRecoveryApproved);
		_columnOriginalValues.put(
			"monitorRecoveryComment", _monitorRecoveryComment);
		_columnOriginalValues.put("chargerRecoveryAmt", _chargerRecoveryAmt);
		_columnOriginalValues.put(
			"chargerRecoveryAmtStatus", _chargerRecoveryAmtStatus);
		_columnOriginalValues.put(
			"chargerRecoveryApproved", _chargerRecoveryApproved);
		_columnOriginalValues.put(
			"chargerRecoveryComment", _chargerRecoveryComment);
		_columnOriginalValues.put("mouseRecoveryAmt", _mouseRecoveryAmt);
		_columnOriginalValues.put(
			"mouseRecoveryAmtStatus", _mouseRecoveryAmtStatus);
		_columnOriginalValues.put(
			"mouseRecoveryApproved", _mouseRecoveryApproved);
		_columnOriginalValues.put(
			"mouseRecoveryComment", _mouseRecoveryComment);
		_columnOriginalValues.put("updatedDate", _updatedDate);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("id_", "id");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("id_", 1L);

		columnBitmasks.put("exitId", 2L);

		columnBitmasks.put("ticketNo", 4L);

		columnBitmasks.put("ticketNoRemark", 8L);

		columnBitmasks.put("mailPst", 16L);

		columnBitmasks.put("mailPstRemark", 32L);

		columnBitmasks.put("downloadFolder", 64L);

		columnBitmasks.put("downloadFolderRemark", 128L);

		columnBitmasks.put("documentFolder", 256L);

		columnBitmasks.put("documentFolderRemark", 512L);

		columnBitmasks.put("otherData", 1024L);

		columnBitmasks.put("otherDataRemark", 2048L);

		columnBitmasks.put("googleDrive", 4096L);

		columnBitmasks.put("googleDriveRemark", 8192L);

		columnBitmasks.put("others", 16384L);

		columnBitmasks.put("othersRemark", 32768L);

		columnBitmasks.put("mailForwarding", 65536L);

		columnBitmasks.put("mailForwardingRemark", 131072L);

		columnBitmasks.put("emailDisable", 262144L);

		columnBitmasks.put("emailDisableRemark", 524288L);

		columnBitmasks.put("systemRecovered", 1048576L);

		columnBitmasks.put("systemRecoveredRemark", 2097152L);

		columnBitmasks.put("clientSystemRecovered", 4194304L);

		columnBitmasks.put("clientSystemRecoveredRemark", 8388608L);

		columnBitmasks.put("accessCardDisable", 16777216L);

		columnBitmasks.put("accessCardDisableRemark", 33554432L);

		columnBitmasks.put("separationDocument", 67108864L);

		columnBitmasks.put("separationDocumentRemark", 134217728L);

		columnBitmasks.put("systemRecoveryAmt", 268435456L);

		columnBitmasks.put("systemRecoveryAmtStatus", 536870912L);

		columnBitmasks.put("systemRecoveryApproved", 1073741824L);

		columnBitmasks.put("systemRecoveryComment", 2147483648L);

		columnBitmasks.put("laptopRecoveryAmt", 4294967296L);

		columnBitmasks.put("laptopRecoveryAmtStatus", 8589934592L);

		columnBitmasks.put("laptopRecoveryApproved", 17179869184L);

		columnBitmasks.put("laptopRecoveryComment", 34359738368L);

		columnBitmasks.put("communicationRecoveryAmt", 68719476736L);

		columnBitmasks.put("communicationRecoveryStatus", 137438953472L);

		columnBitmasks.put("communicationRecoveryApproved", 274877906944L);

		columnBitmasks.put("communicationRecoveryComment", 549755813888L);

		columnBitmasks.put("headphoneRecoveryAmt", 1099511627776L);

		columnBitmasks.put("headphoneRecoveryAmtStatus", 2199023255552L);

		columnBitmasks.put("headphoneRecoveryApproved", 4398046511104L);

		columnBitmasks.put("headphoneRecoveryComment", 8796093022208L);

		columnBitmasks.put("laptopBagRecoveryAmt", 17592186044416L);

		columnBitmasks.put("laptopBagRecoveryAmtStatus", 35184372088832L);

		columnBitmasks.put("laptopBagRecoveryApproved", 70368744177664L);

		columnBitmasks.put("laptopBagRecoveryComment", 140737488355328L);

		columnBitmasks.put("monitorRecoveryAmt", 281474976710656L);

		columnBitmasks.put("monitorRecoveryAmtStatus", 562949953421312L);

		columnBitmasks.put("monitorRecoveryApproved", 1125899906842624L);

		columnBitmasks.put("monitorRecoveryComment", 2251799813685248L);

		columnBitmasks.put("chargerRecoveryAmt", 4503599627370496L);

		columnBitmasks.put("chargerRecoveryAmtStatus", 9007199254740992L);

		columnBitmasks.put("chargerRecoveryApproved", 18014398509481984L);

		columnBitmasks.put("chargerRecoveryComment", 36028797018963968L);

		columnBitmasks.put("mouseRecoveryAmt", 72057594037927936L);

		columnBitmasks.put("mouseRecoveryAmtStatus", 144115188075855872L);

		columnBitmasks.put("mouseRecoveryApproved", 288230376151711744L);

		columnBitmasks.put("mouseRecoveryComment", 576460752303423488L);

		columnBitmasks.put("updatedDate", 1152921504606846976L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private ItForm _escapedModel;

}