/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trantorinc.synergy.notice.core.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import com.trantorinc.synergy.notice.core.model.AdminForm;
import com.trantorinc.synergy.notice.core.model.AdminFormModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the AdminForm service. Represents a row in the &quot;NOTICE_AdminForm&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>AdminFormModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AdminFormImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AdminFormImpl
 * @generated
 */
public class AdminFormModelImpl
	extends BaseModelImpl<AdminForm> implements AdminFormModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a admin form model instance should use the <code>AdminForm</code> interface instead.
	 */
	public static final String TABLE_NAME = "NOTICE_AdminForm";

	public static final Object[][] TABLE_COLUMNS = {
		{"id_", Types.BIGINT}, {"exitId", Types.BIGINT},
		{"stationaryRecoveryAmt", Types.VARCHAR},
		{"stationaryRecoveryAmtStatus", Types.INTEGER},
		{"stationaryRecoveryApproved", Types.BOOLEAN},
		{"stationaryRecoveryComment", Types.VARCHAR},
		{"keysRecoveryAmt", Types.VARCHAR},
		{"keysRecoveryAmtStatus", Types.INTEGER},
		{"keyRecoveryApproved", Types.BOOLEAN},
		{"keyRecoveryComment", Types.VARCHAR},
		{"libraryRecoveryAmt", Types.VARCHAR},
		{"libraryRecoveryAmtStatus", Types.INTEGER},
		{"libraryRecoveryApproved", Types.BOOLEAN},
		{"libraryRecoveryComment", Types.VARCHAR},
		{"sportsRecoveryAmt", Types.VARCHAR},
		{"sportsRecoveryAmtStatus", Types.INTEGER},
		{"sportsRecoveryApproved", Types.BOOLEAN},
		{"sportsRecoveryComment", Types.VARCHAR},
		{"infraRecoveryAmt", Types.VARCHAR},
		{"infraRecoveryAmtStatus", Types.INTEGER},
		{"infraRecoveryApproved", Types.BOOLEAN},
		{"infraRecoveryComment", Types.VARCHAR},
		{"lunchRecoveryAmt", Types.VARCHAR},
		{"lunchRecoveryAmtStatus", Types.INTEGER},
		{"lunchRecoveryApproved", Types.BOOLEAN},
		{"lunchRecoveryComment", Types.VARCHAR},
		{"accessCardRecoveryAmt", Types.VARCHAR},
		{"accessCardRecoveryAmtStatus", Types.INTEGER},
		{"accessCardRecoveryApproved", Types.BOOLEAN},
		{"accessCardRecoveryComment", Types.VARCHAR},
		{"identityCardRecoveryAmt", Types.VARCHAR},
		{"identityCardRecoveryStatus", Types.INTEGER},
		{"identityCardRecoveryApproved", Types.BOOLEAN},
		{"identityCardRecoveryComment", Types.VARCHAR},
		{"updatedDate", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("exitId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("stationaryRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("stationaryRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("stationaryRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("stationaryRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("keysRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("keysRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("keyRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("keyRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("libraryRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("libraryRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("libraryRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("libraryRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sportsRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sportsRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("sportsRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("sportsRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("infraRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("infraRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("infraRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("infraRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lunchRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lunchRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("lunchRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("lunchRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("accessCardRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("accessCardRecoveryAmtStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("accessCardRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("accessCardRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("identityCardRecoveryAmt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("identityCardRecoveryStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("identityCardRecoveryApproved", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("identityCardRecoveryComment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("updatedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table NOTICE_AdminForm (id_ LONG not null primary key,exitId LONG,stationaryRecoveryAmt VARCHAR(75) null,stationaryRecoveryAmtStatus INTEGER,stationaryRecoveryApproved BOOLEAN,stationaryRecoveryComment VARCHAR(500) null,keysRecoveryAmt VARCHAR(75) null,keysRecoveryAmtStatus INTEGER,keyRecoveryApproved BOOLEAN,keyRecoveryComment VARCHAR(500) null,libraryRecoveryAmt VARCHAR(75) null,libraryRecoveryAmtStatus INTEGER,libraryRecoveryApproved BOOLEAN,libraryRecoveryComment VARCHAR(500) null,sportsRecoveryAmt VARCHAR(75) null,sportsRecoveryAmtStatus INTEGER,sportsRecoveryApproved BOOLEAN,sportsRecoveryComment VARCHAR(500) null,infraRecoveryAmt VARCHAR(75) null,infraRecoveryAmtStatus INTEGER,infraRecoveryApproved BOOLEAN,infraRecoveryComment VARCHAR(500) null,lunchRecoveryAmt VARCHAR(75) null,lunchRecoveryAmtStatus INTEGER,lunchRecoveryApproved BOOLEAN,lunchRecoveryComment VARCHAR(500) null,accessCardRecoveryAmt VARCHAR(75) null,accessCardRecoveryAmtStatus INTEGER,accessCardRecoveryApproved BOOLEAN,accessCardRecoveryComment VARCHAR(500) null,identityCardRecoveryAmt VARCHAR(75) null,identityCardRecoveryStatus INTEGER,identityCardRecoveryApproved BOOLEAN,identityCardRecoveryComment VARCHAR(500) null,updatedDate DATE null)";

	public static final String TABLE_SQL_DROP = "drop table NOTICE_AdminForm";

	public static final String ORDER_BY_JPQL = " ORDER BY adminForm.id ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY NOTICE_AdminForm.id_ ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public AdminFormModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AdminForm.class;
	}

	@Override
	public String getModelClassName() {
		return AdminForm.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<AdminForm, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<AdminForm, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AdminForm, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((AdminForm)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<AdminForm, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<AdminForm, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(AdminForm)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<AdminForm, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<AdminForm, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<AdminForm, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<AdminForm, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<AdminForm, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<AdminForm, Object>>();
		Map<String, BiConsumer<AdminForm, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<AdminForm, ?>>();

		attributeGetterFunctions.put("id", AdminForm::getId);
		attributeSetterBiConsumers.put(
			"id", (BiConsumer<AdminForm, Long>)AdminForm::setId);
		attributeGetterFunctions.put("exitId", AdminForm::getExitId);
		attributeSetterBiConsumers.put(
			"exitId", (BiConsumer<AdminForm, Long>)AdminForm::setExitId);
		attributeGetterFunctions.put(
			"stationaryRecoveryAmt", AdminForm::getStationaryRecoveryAmt);
		attributeSetterBiConsumers.put(
			"stationaryRecoveryAmt",
			(BiConsumer<AdminForm, String>)AdminForm::setStationaryRecoveryAmt);
		attributeGetterFunctions.put(
			"stationaryRecoveryAmtStatus",
			AdminForm::getStationaryRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"stationaryRecoveryAmtStatus",
			(BiConsumer<AdminForm, Integer>)
				AdminForm::setStationaryRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"stationaryRecoveryApproved",
			AdminForm::getStationaryRecoveryApproved);
		attributeSetterBiConsumers.put(
			"stationaryRecoveryApproved",
			(BiConsumer<AdminForm, Boolean>)
				AdminForm::setStationaryRecoveryApproved);
		attributeGetterFunctions.put(
			"stationaryRecoveryComment",
			AdminForm::getStationaryRecoveryComment);
		attributeSetterBiConsumers.put(
			"stationaryRecoveryComment",
			(BiConsumer<AdminForm, String>)
				AdminForm::setStationaryRecoveryComment);
		attributeGetterFunctions.put(
			"keysRecoveryAmt", AdminForm::getKeysRecoveryAmt);
		attributeSetterBiConsumers.put(
			"keysRecoveryAmt",
			(BiConsumer<AdminForm, String>)AdminForm::setKeysRecoveryAmt);
		attributeGetterFunctions.put(
			"keysRecoveryAmtStatus", AdminForm::getKeysRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"keysRecoveryAmtStatus",
			(BiConsumer<AdminForm, Integer>)
				AdminForm::setKeysRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"keyRecoveryApproved", AdminForm::getKeyRecoveryApproved);
		attributeSetterBiConsumers.put(
			"keyRecoveryApproved",
			(BiConsumer<AdminForm, Boolean>)AdminForm::setKeyRecoveryApproved);
		attributeGetterFunctions.put(
			"keyRecoveryComment", AdminForm::getKeyRecoveryComment);
		attributeSetterBiConsumers.put(
			"keyRecoveryComment",
			(BiConsumer<AdminForm, String>)AdminForm::setKeyRecoveryComment);
		attributeGetterFunctions.put(
			"libraryRecoveryAmt", AdminForm::getLibraryRecoveryAmt);
		attributeSetterBiConsumers.put(
			"libraryRecoveryAmt",
			(BiConsumer<AdminForm, String>)AdminForm::setLibraryRecoveryAmt);
		attributeGetterFunctions.put(
			"libraryRecoveryAmtStatus", AdminForm::getLibraryRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"libraryRecoveryAmtStatus",
			(BiConsumer<AdminForm, Integer>)
				AdminForm::setLibraryRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"libraryRecoveryApproved", AdminForm::getLibraryRecoveryApproved);
		attributeSetterBiConsumers.put(
			"libraryRecoveryApproved",
			(BiConsumer<AdminForm, Boolean>)
				AdminForm::setLibraryRecoveryApproved);
		attributeGetterFunctions.put(
			"libraryRecoveryComment", AdminForm::getLibraryRecoveryComment);
		attributeSetterBiConsumers.put(
			"libraryRecoveryComment",
			(BiConsumer<AdminForm, String>)
				AdminForm::setLibraryRecoveryComment);
		attributeGetterFunctions.put(
			"sportsRecoveryAmt", AdminForm::getSportsRecoveryAmt);
		attributeSetterBiConsumers.put(
			"sportsRecoveryAmt",
			(BiConsumer<AdminForm, String>)AdminForm::setSportsRecoveryAmt);
		attributeGetterFunctions.put(
			"sportsRecoveryAmtStatus", AdminForm::getSportsRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"sportsRecoveryAmtStatus",
			(BiConsumer<AdminForm, Integer>)
				AdminForm::setSportsRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"sportsRecoveryApproved", AdminForm::getSportsRecoveryApproved);
		attributeSetterBiConsumers.put(
			"sportsRecoveryApproved",
			(BiConsumer<AdminForm, Boolean>)
				AdminForm::setSportsRecoveryApproved);
		attributeGetterFunctions.put(
			"sportsRecoveryComment", AdminForm::getSportsRecoveryComment);
		attributeSetterBiConsumers.put(
			"sportsRecoveryComment",
			(BiConsumer<AdminForm, String>)AdminForm::setSportsRecoveryComment);
		attributeGetterFunctions.put(
			"infraRecoveryAmt", AdminForm::getInfraRecoveryAmt);
		attributeSetterBiConsumers.put(
			"infraRecoveryAmt",
			(BiConsumer<AdminForm, String>)AdminForm::setInfraRecoveryAmt);
		attributeGetterFunctions.put(
			"infraRecoveryAmtStatus", AdminForm::getInfraRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"infraRecoveryAmtStatus",
			(BiConsumer<AdminForm, Integer>)
				AdminForm::setInfraRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"infraRecoveryApproved", AdminForm::getInfraRecoveryApproved);
		attributeSetterBiConsumers.put(
			"infraRecoveryApproved",
			(BiConsumer<AdminForm, Boolean>)
				AdminForm::setInfraRecoveryApproved);
		attributeGetterFunctions.put(
			"infraRecoveryComment", AdminForm::getInfraRecoveryComment);
		attributeSetterBiConsumers.put(
			"infraRecoveryComment",
			(BiConsumer<AdminForm, String>)AdminForm::setInfraRecoveryComment);
		attributeGetterFunctions.put(
			"lunchRecoveryAmt", AdminForm::getLunchRecoveryAmt);
		attributeSetterBiConsumers.put(
			"lunchRecoveryAmt",
			(BiConsumer<AdminForm, String>)AdminForm::setLunchRecoveryAmt);
		attributeGetterFunctions.put(
			"lunchRecoveryAmtStatus", AdminForm::getLunchRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"lunchRecoveryAmtStatus",
			(BiConsumer<AdminForm, Integer>)
				AdminForm::setLunchRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"lunchRecoveryApproved", AdminForm::getLunchRecoveryApproved);
		attributeSetterBiConsumers.put(
			"lunchRecoveryApproved",
			(BiConsumer<AdminForm, Boolean>)
				AdminForm::setLunchRecoveryApproved);
		attributeGetterFunctions.put(
			"lunchRecoveryComment", AdminForm::getLunchRecoveryComment);
		attributeSetterBiConsumers.put(
			"lunchRecoveryComment",
			(BiConsumer<AdminForm, String>)AdminForm::setLunchRecoveryComment);
		attributeGetterFunctions.put(
			"accessCardRecoveryAmt", AdminForm::getAccessCardRecoveryAmt);
		attributeSetterBiConsumers.put(
			"accessCardRecoveryAmt",
			(BiConsumer<AdminForm, String>)AdminForm::setAccessCardRecoveryAmt);
		attributeGetterFunctions.put(
			"accessCardRecoveryAmtStatus",
			AdminForm::getAccessCardRecoveryAmtStatus);
		attributeSetterBiConsumers.put(
			"accessCardRecoveryAmtStatus",
			(BiConsumer<AdminForm, Integer>)
				AdminForm::setAccessCardRecoveryAmtStatus);
		attributeGetterFunctions.put(
			"accessCardRecoveryApproved",
			AdminForm::getAccessCardRecoveryApproved);
		attributeSetterBiConsumers.put(
			"accessCardRecoveryApproved",
			(BiConsumer<AdminForm, Boolean>)
				AdminForm::setAccessCardRecoveryApproved);
		attributeGetterFunctions.put(
			"accessCardRecoveryComment",
			AdminForm::getAccessCardRecoveryComment);
		attributeSetterBiConsumers.put(
			"accessCardRecoveryComment",
			(BiConsumer<AdminForm, String>)
				AdminForm::setAccessCardRecoveryComment);
		attributeGetterFunctions.put(
			"identityCardRecoveryAmt", AdminForm::getIdentityCardRecoveryAmt);
		attributeSetterBiConsumers.put(
			"identityCardRecoveryAmt",
			(BiConsumer<AdminForm, String>)
				AdminForm::setIdentityCardRecoveryAmt);
		attributeGetterFunctions.put(
			"identityCardRecoveryStatus",
			AdminForm::getIdentityCardRecoveryStatus);
		attributeSetterBiConsumers.put(
			"identityCardRecoveryStatus",
			(BiConsumer<AdminForm, Integer>)
				AdminForm::setIdentityCardRecoveryStatus);
		attributeGetterFunctions.put(
			"identityCardRecoveryApproved",
			AdminForm::getIdentityCardRecoveryApproved);
		attributeSetterBiConsumers.put(
			"identityCardRecoveryApproved",
			(BiConsumer<AdminForm, Boolean>)
				AdminForm::setIdentityCardRecoveryApproved);
		attributeGetterFunctions.put(
			"identityCardRecoveryComment",
			AdminForm::getIdentityCardRecoveryComment);
		attributeSetterBiConsumers.put(
			"identityCardRecoveryComment",
			(BiConsumer<AdminForm, String>)
				AdminForm::setIdentityCardRecoveryComment);
		attributeGetterFunctions.put("updatedDate", AdminForm::getUpdatedDate);
		attributeSetterBiConsumers.put(
			"updatedDate",
			(BiConsumer<AdminForm, Date>)AdminForm::setUpdatedDate);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_id = id;
	}

	@Override
	public long getExitId() {
		return _exitId;
	}

	@Override
	public void setExitId(long exitId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_exitId = exitId;
	}

	@Override
	public String getStationaryRecoveryAmt() {
		if (_stationaryRecoveryAmt == null) {
			return "";
		}
		else {
			return _stationaryRecoveryAmt;
		}
	}

	@Override
	public void setStationaryRecoveryAmt(String stationaryRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_stationaryRecoveryAmt = stationaryRecoveryAmt;
	}

	@Override
	public int getStationaryRecoveryAmtStatus() {
		return _stationaryRecoveryAmtStatus;
	}

	@Override
	public void setStationaryRecoveryAmtStatus(
		int stationaryRecoveryAmtStatus) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_stationaryRecoveryAmtStatus = stationaryRecoveryAmtStatus;
	}

	@Override
	public boolean getStationaryRecoveryApproved() {
		return _stationaryRecoveryApproved;
	}

	@Override
	public boolean isStationaryRecoveryApproved() {
		return _stationaryRecoveryApproved;
	}

	@Override
	public void setStationaryRecoveryApproved(
		boolean stationaryRecoveryApproved) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_stationaryRecoveryApproved = stationaryRecoveryApproved;
	}

	@Override
	public String getStationaryRecoveryComment() {
		if (_stationaryRecoveryComment == null) {
			return "";
		}
		else {
			return _stationaryRecoveryComment;
		}
	}

	@Override
	public void setStationaryRecoveryComment(String stationaryRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_stationaryRecoveryComment = stationaryRecoveryComment;
	}

	@Override
	public String getKeysRecoveryAmt() {
		if (_keysRecoveryAmt == null) {
			return "";
		}
		else {
			return _keysRecoveryAmt;
		}
	}

	@Override
	public void setKeysRecoveryAmt(String keysRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_keysRecoveryAmt = keysRecoveryAmt;
	}

	@Override
	public int getKeysRecoveryAmtStatus() {
		return _keysRecoveryAmtStatus;
	}

	@Override
	public void setKeysRecoveryAmtStatus(int keysRecoveryAmtStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_keysRecoveryAmtStatus = keysRecoveryAmtStatus;
	}

	@Override
	public boolean getKeyRecoveryApproved() {
		return _keyRecoveryApproved;
	}

	@Override
	public boolean isKeyRecoveryApproved() {
		return _keyRecoveryApproved;
	}

	@Override
	public void setKeyRecoveryApproved(boolean keyRecoveryApproved) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_keyRecoveryApproved = keyRecoveryApproved;
	}

	@Override
	public String getKeyRecoveryComment() {
		if (_keyRecoveryComment == null) {
			return "";
		}
		else {
			return _keyRecoveryComment;
		}
	}

	@Override
	public void setKeyRecoveryComment(String keyRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_keyRecoveryComment = keyRecoveryComment;
	}

	@Override
	public String getLibraryRecoveryAmt() {
		if (_libraryRecoveryAmt == null) {
			return "";
		}
		else {
			return _libraryRecoveryAmt;
		}
	}

	@Override
	public void setLibraryRecoveryAmt(String libraryRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_libraryRecoveryAmt = libraryRecoveryAmt;
	}

	@Override
	public int getLibraryRecoveryAmtStatus() {
		return _libraryRecoveryAmtStatus;
	}

	@Override
	public void setLibraryRecoveryAmtStatus(int libraryRecoveryAmtStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_libraryRecoveryAmtStatus = libraryRecoveryAmtStatus;
	}

	@Override
	public boolean getLibraryRecoveryApproved() {
		return _libraryRecoveryApproved;
	}

	@Override
	public boolean isLibraryRecoveryApproved() {
		return _libraryRecoveryApproved;
	}

	@Override
	public void setLibraryRecoveryApproved(boolean libraryRecoveryApproved) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_libraryRecoveryApproved = libraryRecoveryApproved;
	}

	@Override
	public String getLibraryRecoveryComment() {
		if (_libraryRecoveryComment == null) {
			return "";
		}
		else {
			return _libraryRecoveryComment;
		}
	}

	@Override
	public void setLibraryRecoveryComment(String libraryRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_libraryRecoveryComment = libraryRecoveryComment;
	}

	@Override
	public String getSportsRecoveryAmt() {
		if (_sportsRecoveryAmt == null) {
			return "";
		}
		else {
			return _sportsRecoveryAmt;
		}
	}

	@Override
	public void setSportsRecoveryAmt(String sportsRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sportsRecoveryAmt = sportsRecoveryAmt;
	}

	@Override
	public int getSportsRecoveryAmtStatus() {
		return _sportsRecoveryAmtStatus;
	}

	@Override
	public void setSportsRecoveryAmtStatus(int sportsRecoveryAmtStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sportsRecoveryAmtStatus = sportsRecoveryAmtStatus;
	}

	@Override
	public boolean getSportsRecoveryApproved() {
		return _sportsRecoveryApproved;
	}

	@Override
	public boolean isSportsRecoveryApproved() {
		return _sportsRecoveryApproved;
	}

	@Override
	public void setSportsRecoveryApproved(boolean sportsRecoveryApproved) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sportsRecoveryApproved = sportsRecoveryApproved;
	}

	@Override
	public String getSportsRecoveryComment() {
		if (_sportsRecoveryComment == null) {
			return "";
		}
		else {
			return _sportsRecoveryComment;
		}
	}

	@Override
	public void setSportsRecoveryComment(String sportsRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_sportsRecoveryComment = sportsRecoveryComment;
	}

	@Override
	public String getInfraRecoveryAmt() {
		if (_infraRecoveryAmt == null) {
			return "";
		}
		else {
			return _infraRecoveryAmt;
		}
	}

	@Override
	public void setInfraRecoveryAmt(String infraRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_infraRecoveryAmt = infraRecoveryAmt;
	}

	@Override
	public int getInfraRecoveryAmtStatus() {
		return _infraRecoveryAmtStatus;
	}

	@Override
	public void setInfraRecoveryAmtStatus(int infraRecoveryAmtStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_infraRecoveryAmtStatus = infraRecoveryAmtStatus;
	}

	@Override
	public boolean getInfraRecoveryApproved() {
		return _infraRecoveryApproved;
	}

	@Override
	public boolean isInfraRecoveryApproved() {
		return _infraRecoveryApproved;
	}

	@Override
	public void setInfraRecoveryApproved(boolean infraRecoveryApproved) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_infraRecoveryApproved = infraRecoveryApproved;
	}

	@Override
	public String getInfraRecoveryComment() {
		if (_infraRecoveryComment == null) {
			return "";
		}
		else {
			return _infraRecoveryComment;
		}
	}

	@Override
	public void setInfraRecoveryComment(String infraRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_infraRecoveryComment = infraRecoveryComment;
	}

	@Override
	public String getLunchRecoveryAmt() {
		if (_lunchRecoveryAmt == null) {
			return "";
		}
		else {
			return _lunchRecoveryAmt;
		}
	}

	@Override
	public void setLunchRecoveryAmt(String lunchRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lunchRecoveryAmt = lunchRecoveryAmt;
	}

	@Override
	public int getLunchRecoveryAmtStatus() {
		return _lunchRecoveryAmtStatus;
	}

	@Override
	public void setLunchRecoveryAmtStatus(int lunchRecoveryAmtStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lunchRecoveryAmtStatus = lunchRecoveryAmtStatus;
	}

	@Override
	public boolean getLunchRecoveryApproved() {
		return _lunchRecoveryApproved;
	}

	@Override
	public boolean isLunchRecoveryApproved() {
		return _lunchRecoveryApproved;
	}

	@Override
	public void setLunchRecoveryApproved(boolean lunchRecoveryApproved) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lunchRecoveryApproved = lunchRecoveryApproved;
	}

	@Override
	public String getLunchRecoveryComment() {
		if (_lunchRecoveryComment == null) {
			return "";
		}
		else {
			return _lunchRecoveryComment;
		}
	}

	@Override
	public void setLunchRecoveryComment(String lunchRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lunchRecoveryComment = lunchRecoveryComment;
	}

	@Override
	public String getAccessCardRecoveryAmt() {
		if (_accessCardRecoveryAmt == null) {
			return "";
		}
		else {
			return _accessCardRecoveryAmt;
		}
	}

	@Override
	public void setAccessCardRecoveryAmt(String accessCardRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accessCardRecoveryAmt = accessCardRecoveryAmt;
	}

	@Override
	public int getAccessCardRecoveryAmtStatus() {
		return _accessCardRecoveryAmtStatus;
	}

	@Override
	public void setAccessCardRecoveryAmtStatus(
		int accessCardRecoveryAmtStatus) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accessCardRecoveryAmtStatus = accessCardRecoveryAmtStatus;
	}

	@Override
	public boolean getAccessCardRecoveryApproved() {
		return _accessCardRecoveryApproved;
	}

	@Override
	public boolean isAccessCardRecoveryApproved() {
		return _accessCardRecoveryApproved;
	}

	@Override
	public void setAccessCardRecoveryApproved(
		boolean accessCardRecoveryApproved) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accessCardRecoveryApproved = accessCardRecoveryApproved;
	}

	@Override
	public String getAccessCardRecoveryComment() {
		if (_accessCardRecoveryComment == null) {
			return "";
		}
		else {
			return _accessCardRecoveryComment;
		}
	}

	@Override
	public void setAccessCardRecoveryComment(String accessCardRecoveryComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_accessCardRecoveryComment = accessCardRecoveryComment;
	}

	@Override
	public String getIdentityCardRecoveryAmt() {
		if (_identityCardRecoveryAmt == null) {
			return "";
		}
		else {
			return _identityCardRecoveryAmt;
		}
	}

	@Override
	public void setIdentityCardRecoveryAmt(String identityCardRecoveryAmt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_identityCardRecoveryAmt = identityCardRecoveryAmt;
	}

	@Override
	public int getIdentityCardRecoveryStatus() {
		return _identityCardRecoveryStatus;
	}

	@Override
	public void setIdentityCardRecoveryStatus(int identityCardRecoveryStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_identityCardRecoveryStatus = identityCardRecoveryStatus;
	}

	@Override
	public boolean getIdentityCardRecoveryApproved() {
		return _identityCardRecoveryApproved;
	}

	@Override
	public boolean isIdentityCardRecoveryApproved() {
		return _identityCardRecoveryApproved;
	}

	@Override
	public void setIdentityCardRecoveryApproved(
		boolean identityCardRecoveryApproved) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_identityCardRecoveryApproved = identityCardRecoveryApproved;
	}

	@Override
	public String getIdentityCardRecoveryComment() {
		if (_identityCardRecoveryComment == null) {
			return "";
		}
		else {
			return _identityCardRecoveryComment;
		}
	}

	@Override
	public void setIdentityCardRecoveryComment(
		String identityCardRecoveryComment) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_identityCardRecoveryComment = identityCardRecoveryComment;
	}

	@Override
	public Date getUpdatedDate() {
		return _updatedDate;
	}

	@Override
	public void setUpdatedDate(Date updatedDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_updatedDate = updatedDate;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, AdminForm.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AdminForm toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, AdminForm>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AdminFormImpl adminFormImpl = new AdminFormImpl();

		adminFormImpl.setId(getId());
		adminFormImpl.setExitId(getExitId());
		adminFormImpl.setStationaryRecoveryAmt(getStationaryRecoveryAmt());
		adminFormImpl.setStationaryRecoveryAmtStatus(
			getStationaryRecoveryAmtStatus());
		adminFormImpl.setStationaryRecoveryApproved(
			isStationaryRecoveryApproved());
		adminFormImpl.setStationaryRecoveryComment(
			getStationaryRecoveryComment());
		adminFormImpl.setKeysRecoveryAmt(getKeysRecoveryAmt());
		adminFormImpl.setKeysRecoveryAmtStatus(getKeysRecoveryAmtStatus());
		adminFormImpl.setKeyRecoveryApproved(isKeyRecoveryApproved());
		adminFormImpl.setKeyRecoveryComment(getKeyRecoveryComment());
		adminFormImpl.setLibraryRecoveryAmt(getLibraryRecoveryAmt());
		adminFormImpl.setLibraryRecoveryAmtStatus(
			getLibraryRecoveryAmtStatus());
		adminFormImpl.setLibraryRecoveryApproved(isLibraryRecoveryApproved());
		adminFormImpl.setLibraryRecoveryComment(getLibraryRecoveryComment());
		adminFormImpl.setSportsRecoveryAmt(getSportsRecoveryAmt());
		adminFormImpl.setSportsRecoveryAmtStatus(getSportsRecoveryAmtStatus());
		adminFormImpl.setSportsRecoveryApproved(isSportsRecoveryApproved());
		adminFormImpl.setSportsRecoveryComment(getSportsRecoveryComment());
		adminFormImpl.setInfraRecoveryAmt(getInfraRecoveryAmt());
		adminFormImpl.setInfraRecoveryAmtStatus(getInfraRecoveryAmtStatus());
		adminFormImpl.setInfraRecoveryApproved(isInfraRecoveryApproved());
		adminFormImpl.setInfraRecoveryComment(getInfraRecoveryComment());
		adminFormImpl.setLunchRecoveryAmt(getLunchRecoveryAmt());
		adminFormImpl.setLunchRecoveryAmtStatus(getLunchRecoveryAmtStatus());
		adminFormImpl.setLunchRecoveryApproved(isLunchRecoveryApproved());
		adminFormImpl.setLunchRecoveryComment(getLunchRecoveryComment());
		adminFormImpl.setAccessCardRecoveryAmt(getAccessCardRecoveryAmt());
		adminFormImpl.setAccessCardRecoveryAmtStatus(
			getAccessCardRecoveryAmtStatus());
		adminFormImpl.setAccessCardRecoveryApproved(
			isAccessCardRecoveryApproved());
		adminFormImpl.setAccessCardRecoveryComment(
			getAccessCardRecoveryComment());
		adminFormImpl.setIdentityCardRecoveryAmt(getIdentityCardRecoveryAmt());
		adminFormImpl.setIdentityCardRecoveryStatus(
			getIdentityCardRecoveryStatus());
		adminFormImpl.setIdentityCardRecoveryApproved(
			isIdentityCardRecoveryApproved());
		adminFormImpl.setIdentityCardRecoveryComment(
			getIdentityCardRecoveryComment());
		adminFormImpl.setUpdatedDate(getUpdatedDate());

		adminFormImpl.resetOriginalValues();

		return adminFormImpl;
	}

	@Override
	public AdminForm cloneWithOriginalValues() {
		AdminFormImpl adminFormImpl = new AdminFormImpl();

		adminFormImpl.setId(this.<Long>getColumnOriginalValue("id_"));
		adminFormImpl.setExitId(this.<Long>getColumnOriginalValue("exitId"));
		adminFormImpl.setStationaryRecoveryAmt(
			this.<String>getColumnOriginalValue("stationaryRecoveryAmt"));
		adminFormImpl.setStationaryRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue(
				"stationaryRecoveryAmtStatus"));
		adminFormImpl.setStationaryRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("stationaryRecoveryApproved"));
		adminFormImpl.setStationaryRecoveryComment(
			this.<String>getColumnOriginalValue("stationaryRecoveryComment"));
		adminFormImpl.setKeysRecoveryAmt(
			this.<String>getColumnOriginalValue("keysRecoveryAmt"));
		adminFormImpl.setKeysRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue("keysRecoveryAmtStatus"));
		adminFormImpl.setKeyRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("keyRecoveryApproved"));
		adminFormImpl.setKeyRecoveryComment(
			this.<String>getColumnOriginalValue("keyRecoveryComment"));
		adminFormImpl.setLibraryRecoveryAmt(
			this.<String>getColumnOriginalValue("libraryRecoveryAmt"));
		adminFormImpl.setLibraryRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue("libraryRecoveryAmtStatus"));
		adminFormImpl.setLibraryRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("libraryRecoveryApproved"));
		adminFormImpl.setLibraryRecoveryComment(
			this.<String>getColumnOriginalValue("libraryRecoveryComment"));
		adminFormImpl.setSportsRecoveryAmt(
			this.<String>getColumnOriginalValue("sportsRecoveryAmt"));
		adminFormImpl.setSportsRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue("sportsRecoveryAmtStatus"));
		adminFormImpl.setSportsRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("sportsRecoveryApproved"));
		adminFormImpl.setSportsRecoveryComment(
			this.<String>getColumnOriginalValue("sportsRecoveryComment"));
		adminFormImpl.setInfraRecoveryAmt(
			this.<String>getColumnOriginalValue("infraRecoveryAmt"));
		adminFormImpl.setInfraRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue("infraRecoveryAmtStatus"));
		adminFormImpl.setInfraRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("infraRecoveryApproved"));
		adminFormImpl.setInfraRecoveryComment(
			this.<String>getColumnOriginalValue("infraRecoveryComment"));
		adminFormImpl.setLunchRecoveryAmt(
			this.<String>getColumnOriginalValue("lunchRecoveryAmt"));
		adminFormImpl.setLunchRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue("lunchRecoveryAmtStatus"));
		adminFormImpl.setLunchRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("lunchRecoveryApproved"));
		adminFormImpl.setLunchRecoveryComment(
			this.<String>getColumnOriginalValue("lunchRecoveryComment"));
		adminFormImpl.setAccessCardRecoveryAmt(
			this.<String>getColumnOriginalValue("accessCardRecoveryAmt"));
		adminFormImpl.setAccessCardRecoveryAmtStatus(
			this.<Integer>getColumnOriginalValue(
				"accessCardRecoveryAmtStatus"));
		adminFormImpl.setAccessCardRecoveryApproved(
			this.<Boolean>getColumnOriginalValue("accessCardRecoveryApproved"));
		adminFormImpl.setAccessCardRecoveryComment(
			this.<String>getColumnOriginalValue("accessCardRecoveryComment"));
		adminFormImpl.setIdentityCardRecoveryAmt(
			this.<String>getColumnOriginalValue("identityCardRecoveryAmt"));
		adminFormImpl.setIdentityCardRecoveryStatus(
			this.<Integer>getColumnOriginalValue("identityCardRecoveryStatus"));
		adminFormImpl.setIdentityCardRecoveryApproved(
			this.<Boolean>getColumnOriginalValue(
				"identityCardRecoveryApproved"));
		adminFormImpl.setIdentityCardRecoveryComment(
			this.<String>getColumnOriginalValue("identityCardRecoveryComment"));
		adminFormImpl.setUpdatedDate(
			this.<Date>getColumnOriginalValue("updatedDate"));

		return adminFormImpl;
	}

	@Override
	public int compareTo(AdminForm adminForm) {
		long primaryKey = adminForm.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof AdminForm)) {
			return false;
		}

		AdminForm adminForm = (AdminForm)object;

		long primaryKey = adminForm.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<AdminForm> toCacheModel() {
		AdminFormCacheModel adminFormCacheModel = new AdminFormCacheModel();

		adminFormCacheModel.id = getId();

		adminFormCacheModel.exitId = getExitId();

		adminFormCacheModel.stationaryRecoveryAmt = getStationaryRecoveryAmt();

		String stationaryRecoveryAmt =
			adminFormCacheModel.stationaryRecoveryAmt;

		if ((stationaryRecoveryAmt != null) &&
			(stationaryRecoveryAmt.length() == 0)) {

			adminFormCacheModel.stationaryRecoveryAmt = null;
		}

		adminFormCacheModel.stationaryRecoveryAmtStatus =
			getStationaryRecoveryAmtStatus();

		adminFormCacheModel.stationaryRecoveryApproved =
			isStationaryRecoveryApproved();

		adminFormCacheModel.stationaryRecoveryComment =
			getStationaryRecoveryComment();

		String stationaryRecoveryComment =
			adminFormCacheModel.stationaryRecoveryComment;

		if ((stationaryRecoveryComment != null) &&
			(stationaryRecoveryComment.length() == 0)) {

			adminFormCacheModel.stationaryRecoveryComment = null;
		}

		adminFormCacheModel.keysRecoveryAmt = getKeysRecoveryAmt();

		String keysRecoveryAmt = adminFormCacheModel.keysRecoveryAmt;

		if ((keysRecoveryAmt != null) && (keysRecoveryAmt.length() == 0)) {
			adminFormCacheModel.keysRecoveryAmt = null;
		}

		adminFormCacheModel.keysRecoveryAmtStatus = getKeysRecoveryAmtStatus();

		adminFormCacheModel.keyRecoveryApproved = isKeyRecoveryApproved();

		adminFormCacheModel.keyRecoveryComment = getKeyRecoveryComment();

		String keyRecoveryComment = adminFormCacheModel.keyRecoveryComment;

		if ((keyRecoveryComment != null) &&
			(keyRecoveryComment.length() == 0)) {

			adminFormCacheModel.keyRecoveryComment = null;
		}

		adminFormCacheModel.libraryRecoveryAmt = getLibraryRecoveryAmt();

		String libraryRecoveryAmt = adminFormCacheModel.libraryRecoveryAmt;

		if ((libraryRecoveryAmt != null) &&
			(libraryRecoveryAmt.length() == 0)) {

			adminFormCacheModel.libraryRecoveryAmt = null;
		}

		adminFormCacheModel.libraryRecoveryAmtStatus =
			getLibraryRecoveryAmtStatus();

		adminFormCacheModel.libraryRecoveryApproved =
			isLibraryRecoveryApproved();

		adminFormCacheModel.libraryRecoveryComment =
			getLibraryRecoveryComment();

		String libraryRecoveryComment =
			adminFormCacheModel.libraryRecoveryComment;

		if ((libraryRecoveryComment != null) &&
			(libraryRecoveryComment.length() == 0)) {

			adminFormCacheModel.libraryRecoveryComment = null;
		}

		adminFormCacheModel.sportsRecoveryAmt = getSportsRecoveryAmt();

		String sportsRecoveryAmt = adminFormCacheModel.sportsRecoveryAmt;

		if ((sportsRecoveryAmt != null) && (sportsRecoveryAmt.length() == 0)) {
			adminFormCacheModel.sportsRecoveryAmt = null;
		}

		adminFormCacheModel.sportsRecoveryAmtStatus =
			getSportsRecoveryAmtStatus();

		adminFormCacheModel.sportsRecoveryApproved = isSportsRecoveryApproved();

		adminFormCacheModel.sportsRecoveryComment = getSportsRecoveryComment();

		String sportsRecoveryComment =
			adminFormCacheModel.sportsRecoveryComment;

		if ((sportsRecoveryComment != null) &&
			(sportsRecoveryComment.length() == 0)) {

			adminFormCacheModel.sportsRecoveryComment = null;
		}

		adminFormCacheModel.infraRecoveryAmt = getInfraRecoveryAmt();

		String infraRecoveryAmt = adminFormCacheModel.infraRecoveryAmt;

		if ((infraRecoveryAmt != null) && (infraRecoveryAmt.length() == 0)) {
			adminFormCacheModel.infraRecoveryAmt = null;
		}

		adminFormCacheModel.infraRecoveryAmtStatus =
			getInfraRecoveryAmtStatus();

		adminFormCacheModel.infraRecoveryApproved = isInfraRecoveryApproved();

		adminFormCacheModel.infraRecoveryComment = getInfraRecoveryComment();

		String infraRecoveryComment = adminFormCacheModel.infraRecoveryComment;

		if ((infraRecoveryComment != null) &&
			(infraRecoveryComment.length() == 0)) {

			adminFormCacheModel.infraRecoveryComment = null;
		}

		adminFormCacheModel.lunchRecoveryAmt = getLunchRecoveryAmt();

		String lunchRecoveryAmt = adminFormCacheModel.lunchRecoveryAmt;

		if ((lunchRecoveryAmt != null) && (lunchRecoveryAmt.length() == 0)) {
			adminFormCacheModel.lunchRecoveryAmt = null;
		}

		adminFormCacheModel.lunchRecoveryAmtStatus =
			getLunchRecoveryAmtStatus();

		adminFormCacheModel.lunchRecoveryApproved = isLunchRecoveryApproved();

		adminFormCacheModel.lunchRecoveryComment = getLunchRecoveryComment();

		String lunchRecoveryComment = adminFormCacheModel.lunchRecoveryComment;

		if ((lunchRecoveryComment != null) &&
			(lunchRecoveryComment.length() == 0)) {

			adminFormCacheModel.lunchRecoveryComment = null;
		}

		adminFormCacheModel.accessCardRecoveryAmt = getAccessCardRecoveryAmt();

		String accessCardRecoveryAmt =
			adminFormCacheModel.accessCardRecoveryAmt;

		if ((accessCardRecoveryAmt != null) &&
			(accessCardRecoveryAmt.length() == 0)) {

			adminFormCacheModel.accessCardRecoveryAmt = null;
		}

		adminFormCacheModel.accessCardRecoveryAmtStatus =
			getAccessCardRecoveryAmtStatus();

		adminFormCacheModel.accessCardRecoveryApproved =
			isAccessCardRecoveryApproved();

		adminFormCacheModel.accessCardRecoveryComment =
			getAccessCardRecoveryComment();

		String accessCardRecoveryComment =
			adminFormCacheModel.accessCardRecoveryComment;

		if ((accessCardRecoveryComment != null) &&
			(accessCardRecoveryComment.length() == 0)) {

			adminFormCacheModel.accessCardRecoveryComment = null;
		}

		adminFormCacheModel.identityCardRecoveryAmt =
			getIdentityCardRecoveryAmt();

		String identityCardRecoveryAmt =
			adminFormCacheModel.identityCardRecoveryAmt;

		if ((identityCardRecoveryAmt != null) &&
			(identityCardRecoveryAmt.length() == 0)) {

			adminFormCacheModel.identityCardRecoveryAmt = null;
		}

		adminFormCacheModel.identityCardRecoveryStatus =
			getIdentityCardRecoveryStatus();

		adminFormCacheModel.identityCardRecoveryApproved =
			isIdentityCardRecoveryApproved();

		adminFormCacheModel.identityCardRecoveryComment =
			getIdentityCardRecoveryComment();

		String identityCardRecoveryComment =
			adminFormCacheModel.identityCardRecoveryComment;

		if ((identityCardRecoveryComment != null) &&
			(identityCardRecoveryComment.length() == 0)) {

			adminFormCacheModel.identityCardRecoveryComment = null;
		}

		Date updatedDate = getUpdatedDate();

		if (updatedDate != null) {
			adminFormCacheModel.updatedDate = updatedDate.getTime();
		}
		else {
			adminFormCacheModel.updatedDate = Long.MIN_VALUE;
		}

		return adminFormCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<AdminForm, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<AdminForm, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AdminForm, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((AdminForm)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, AdminForm>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					AdminForm.class, ModelWrapper.class);

	}

	private long _id;
	private long _exitId;
	private String _stationaryRecoveryAmt;
	private int _stationaryRecoveryAmtStatus;
	private boolean _stationaryRecoveryApproved;
	private String _stationaryRecoveryComment;
	private String _keysRecoveryAmt;
	private int _keysRecoveryAmtStatus;
	private boolean _keyRecoveryApproved;
	private String _keyRecoveryComment;
	private String _libraryRecoveryAmt;
	private int _libraryRecoveryAmtStatus;
	private boolean _libraryRecoveryApproved;
	private String _libraryRecoveryComment;
	private String _sportsRecoveryAmt;
	private int _sportsRecoveryAmtStatus;
	private boolean _sportsRecoveryApproved;
	private String _sportsRecoveryComment;
	private String _infraRecoveryAmt;
	private int _infraRecoveryAmtStatus;
	private boolean _infraRecoveryApproved;
	private String _infraRecoveryComment;
	private String _lunchRecoveryAmt;
	private int _lunchRecoveryAmtStatus;
	private boolean _lunchRecoveryApproved;
	private String _lunchRecoveryComment;
	private String _accessCardRecoveryAmt;
	private int _accessCardRecoveryAmtStatus;
	private boolean _accessCardRecoveryApproved;
	private String _accessCardRecoveryComment;
	private String _identityCardRecoveryAmt;
	private int _identityCardRecoveryStatus;
	private boolean _identityCardRecoveryApproved;
	private String _identityCardRecoveryComment;
	private Date _updatedDate;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<AdminForm, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((AdminForm)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("id_", _id);
		_columnOriginalValues.put("exitId", _exitId);
		_columnOriginalValues.put(
			"stationaryRecoveryAmt", _stationaryRecoveryAmt);
		_columnOriginalValues.put(
			"stationaryRecoveryAmtStatus", _stationaryRecoveryAmtStatus);
		_columnOriginalValues.put(
			"stationaryRecoveryApproved", _stationaryRecoveryApproved);
		_columnOriginalValues.put(
			"stationaryRecoveryComment", _stationaryRecoveryComment);
		_columnOriginalValues.put("keysRecoveryAmt", _keysRecoveryAmt);
		_columnOriginalValues.put(
			"keysRecoveryAmtStatus", _keysRecoveryAmtStatus);
		_columnOriginalValues.put("keyRecoveryApproved", _keyRecoveryApproved);
		_columnOriginalValues.put("keyRecoveryComment", _keyRecoveryComment);
		_columnOriginalValues.put("libraryRecoveryAmt", _libraryRecoveryAmt);
		_columnOriginalValues.put(
			"libraryRecoveryAmtStatus", _libraryRecoveryAmtStatus);
		_columnOriginalValues.put(
			"libraryRecoveryApproved", _libraryRecoveryApproved);
		_columnOriginalValues.put(
			"libraryRecoveryComment", _libraryRecoveryComment);
		_columnOriginalValues.put("sportsRecoveryAmt", _sportsRecoveryAmt);
		_columnOriginalValues.put(
			"sportsRecoveryAmtStatus", _sportsRecoveryAmtStatus);
		_columnOriginalValues.put(
			"sportsRecoveryApproved", _sportsRecoveryApproved);
		_columnOriginalValues.put(
			"sportsRecoveryComment", _sportsRecoveryComment);
		_columnOriginalValues.put("infraRecoveryAmt", _infraRecoveryAmt);
		_columnOriginalValues.put(
			"infraRecoveryAmtStatus", _infraRecoveryAmtStatus);
		_columnOriginalValues.put(
			"infraRecoveryApproved", _infraRecoveryApproved);
		_columnOriginalValues.put(
			"infraRecoveryComment", _infraRecoveryComment);
		_columnOriginalValues.put("lunchRecoveryAmt", _lunchRecoveryAmt);
		_columnOriginalValues.put(
			"lunchRecoveryAmtStatus", _lunchRecoveryAmtStatus);
		_columnOriginalValues.put(
			"lunchRecoveryApproved", _lunchRecoveryApproved);
		_columnOriginalValues.put(
			"lunchRecoveryComment", _lunchRecoveryComment);
		_columnOriginalValues.put(
			"accessCardRecoveryAmt", _accessCardRecoveryAmt);
		_columnOriginalValues.put(
			"accessCardRecoveryAmtStatus", _accessCardRecoveryAmtStatus);
		_columnOriginalValues.put(
			"accessCardRecoveryApproved", _accessCardRecoveryApproved);
		_columnOriginalValues.put(
			"accessCardRecoveryComment", _accessCardRecoveryComment);
		_columnOriginalValues.put(
			"identityCardRecoveryAmt", _identityCardRecoveryAmt);
		_columnOriginalValues.put(
			"identityCardRecoveryStatus", _identityCardRecoveryStatus);
		_columnOriginalValues.put(
			"identityCardRecoveryApproved", _identityCardRecoveryApproved);
		_columnOriginalValues.put(
			"identityCardRecoveryComment", _identityCardRecoveryComment);
		_columnOriginalValues.put("updatedDate", _updatedDate);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("id_", "id");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("id_", 1L);

		columnBitmasks.put("exitId", 2L);

		columnBitmasks.put("stationaryRecoveryAmt", 4L);

		columnBitmasks.put("stationaryRecoveryAmtStatus", 8L);

		columnBitmasks.put("stationaryRecoveryApproved", 16L);

		columnBitmasks.put("stationaryRecoveryComment", 32L);

		columnBitmasks.put("keysRecoveryAmt", 64L);

		columnBitmasks.put("keysRecoveryAmtStatus", 128L);

		columnBitmasks.put("keyRecoveryApproved", 256L);

		columnBitmasks.put("keyRecoveryComment", 512L);

		columnBitmasks.put("libraryRecoveryAmt", 1024L);

		columnBitmasks.put("libraryRecoveryAmtStatus", 2048L);

		columnBitmasks.put("libraryRecoveryApproved", 4096L);

		columnBitmasks.put("libraryRecoveryComment", 8192L);

		columnBitmasks.put("sportsRecoveryAmt", 16384L);

		columnBitmasks.put("sportsRecoveryAmtStatus", 32768L);

		columnBitmasks.put("sportsRecoveryApproved", 65536L);

		columnBitmasks.put("sportsRecoveryComment", 131072L);

		columnBitmasks.put("infraRecoveryAmt", 262144L);

		columnBitmasks.put("infraRecoveryAmtStatus", 524288L);

		columnBitmasks.put("infraRecoveryApproved", 1048576L);

		columnBitmasks.put("infraRecoveryComment", 2097152L);

		columnBitmasks.put("lunchRecoveryAmt", 4194304L);

		columnBitmasks.put("lunchRecoveryAmtStatus", 8388608L);

		columnBitmasks.put("lunchRecoveryApproved", 16777216L);

		columnBitmasks.put("lunchRecoveryComment", 33554432L);

		columnBitmasks.put("accessCardRecoveryAmt", 67108864L);

		columnBitmasks.put("accessCardRecoveryAmtStatus", 134217728L);

		columnBitmasks.put("accessCardRecoveryApproved", 268435456L);

		columnBitmasks.put("accessCardRecoveryComment", 536870912L);

		columnBitmasks.put("identityCardRecoveryAmt", 1073741824L);

		columnBitmasks.put("identityCardRecoveryStatus", 2147483648L);

		columnBitmasks.put("identityCardRecoveryApproved", 4294967296L);

		columnBitmasks.put("identityCardRecoveryComment", 8589934592L);

		columnBitmasks.put("updatedDate", 17179869184L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private AdminForm _escapedModel;

}